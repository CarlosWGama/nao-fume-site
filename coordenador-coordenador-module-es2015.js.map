{"version":3,"sources":["./src/app/coordenador/coordenador.page.html","./src/app/coordenador/coordenador.module.ts","./src/app/coordenador/coordenador.page.scss","./src/app/coordenador/coordenador.page.ts","./src/app/models/paciente.ts","./src/app/models/questionario.ts","./src/app/services/paciente.service.ts"],"names":[],"mappings":"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","file":"coordenador-coordenador-module-es2015.js","sourcesContent":["module.exports = \"<ion-header no-shadow no-border>\\r\\n    <ion-toolbar color=\\\"primary\\\">\\r\\n      <ion-buttons slot=\\\"start\\\" class=\\\"ion-padding\\\" (click)=\\\"sair()\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"exit\\\"></ion-icon>  Sair\\r\\n      </ion-buttons>\\r\\n      <ion-title class=\\\"ion-text-center\\\">{{titulo}}</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n    <ion-text class=\\\"ion-text-center\\\" *ngIf=\\\"buscando\\\">\\r\\n      <h1>Buscando seus dados!</h1>\\r\\n    </ion-text>\\r\\n\\r\\n    <ion-tabs no-shadow no-border *ngIf=\\\"!buscando\\\">\\r\\n      <ion-tab-bar color=\\\"primary\\\" slot=\\\"top\\\" style=\\\"--border: 0px\\\" >\\r\\n        <!-- Pacientes -->\\r\\n        <ion-tab-button tab=\\\"pacientes\\\" (click)=\\\"setTitulo('Pacientes')\\\">\\r\\n          <ion-icon name=\\\"person\\\"  size=\\\"large\\\"></ion-icon>\\r\\n          <ion-label>Pacientes</ion-label>\\r\\n        </ion-tab-button>\\r\\n        <!-- Sessões -->\\r\\n        <ion-tab-button tab=\\\"sessoes\\\" (click)=\\\"setTitulo('Sessões')\\\">\\r\\n          <ion-icon name=\\\"paper\\\" size=\\\"large\\\"></ion-icon>\\r\\n          <ion-label>Sessões</ion-label>\\r\\n        </ion-tab-button>\\r\\n        <!-- Relatórios -->\\r\\n        <ion-tab-button tab=\\\"relatorios\\\"  (click)=\\\"setTitulo('Relatórios')\\\">\\r\\n            <ion-icon name=\\\"ribbon\\\"  size=\\\"large\\\"></ion-icon>\\r\\n            <ion-label>Relatórios</ion-label>\\r\\n          </ion-tab-button>\\r\\n      </ion-tab-bar>\\r\\n  </ion-tabs>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CoordenadorPage } from './coordenador.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CoordenadorPage,\r\n    children: [\r\n      { path: '', redirectTo: 'pacientes' },\r\n      { path: 'pacientes', loadChildren: './pacientes/pacientes.module#PacientesPageModule' },\r\n      { path: 'sessoes', loadChildren: './sessoes/sessoes.module#SessoesPageModule' },\r\n      { path: 'relatorios', loadChildren: './relatorios/relatorios.module#RelatoriosPageModule' },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CoordenadorPage]\r\n})\r\nexport class CoordenadorPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvb3JkZW5hZG9yL2Nvb3JkZW5hZG9yLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsuariosService } from '../services/usuarios.service';\r\nimport * as firebase from 'firebase';\r\nimport { PacienteService } from '../services/paciente.service';\r\n\r\n@Component({\r\n  selector: 'app-coordenador',\r\n  templateUrl: './coordenador.page.html',\r\n  styleUrls: ['./coordenador.page.scss'],\r\n})\r\nexport class CoordenadorPage implements OnInit {\r\n\r\n  titulo:string = 'Pacientes';\r\n  buscando:boolean = true;\r\n  constructor(private router:Router, private usuariosService:UsuariosService, private pacienteService:PacienteService) { }\r\n\r\n  async ngOnInit() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.buscando = user == null\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Informa o nome do titulo a ser exibido na página \r\n   * @param titulo Titulo a ser exibido na página\r\n   */\r\n  setTitulo(titulo:string) {\r\n    this.titulo = titulo;\r\n  }\r\n\r\n  /**\r\n   * Desloga o usuário do sitema\r\n   */\r\n  sair() {\r\n    this.usuariosService.deslogar();\r\n    //window.location.reload();\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n\r\n}\r\n","import { Questionario } from './questionario';\r\n\r\n/**\r\n * Classe com acesso ao dados do paciente\r\n */\r\nexport class Paciente {\r\n\r\n    // Lista a posição do paciente em relação aos demais\r\n    public rank = 0;\r\n\r\n    constructor(public uid?: string, public nome?: string, public codigo?: number,\r\n                public mediaCigarros: number = 0, public precoCigarro: number = 0.1,\r\n                public coordenadorUID?: string, public ultimoDiaRespondido?: string,\r\n                public avatar: number = 1,\r\n                public cigarrosEvitados: number = 0, public diasSeguidosSemFumar: number = 0,\r\n                public diasSemFumar: number = 0, public maxDiasSemFumar: number = 0,\r\n                public dinheiroAcumulado: number = 0, public dinheiroDisponivel: number = 0,\r\n                public primeiroAcesso: boolean = true,\r\n                public diasPraticoExercicio: number = 0, public excluido: boolean = false,\r\n                public questionariosDiarios: Questionario[] = []) { }\r\n\r\n    public get avatarURL(): string {\r\n        return `/assets/imgs/avatars/${this.avatar}.jpg`;\r\n    }\r\n}\r\n","/**\r\n * Questionário com os atributos das perguntas diarias\r\n */\r\nexport class Questionario {\r\n\r\n    /**\r\n     * @param dia | Dia da consulta (YYYY-MM-DD)\r\n     * @param humor | Como foi o humor do paciente 0 -> Baixo, 1 -> Médio, 2 -> Bom\r\n     * @param fumou | Se fumou naquele dia,\r\n     * @param cigarros | Quantidade de cigarros\r\n     * @param exercitou  | Se praticou exercicio\r\n     * @param vontadeFumar | Vontade de fumar 0 -> Baixa, 1 -> Normal, 2 -> Alta\r\n     */\r\n    constructor(public dia?: string,\r\n                public humor?: 0|1|2,\r\n                public fumou?: boolean,\r\n                public cigarros: number = 0,\r\n                public exercitou?: boolean,\r\n                public vontadeFumar?: 0|1|2) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment'\r\nimport * as firebase from 'firebase';\r\nimport { Paciente } from '../models/paciente';\r\nimport { Questionario } from '../models/questionario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Controla os dados dos questionários do paciente\r\n */\r\nexport class PacienteService {\r\n\r\n    private pacienteDB: firebase.firestore.CollectionReference;\r\n    private usuarioID:string;\r\n    private paciente:Paciente = null;\r\n\r\n\r\n    constructor() { \r\n        firebase.auth().onAuthStateChanged(user => { \r\n            if (user != null)\r\n                this.usuarioID = user.uid;\r\n        })\r\n        this.pacienteDB = firebase.firestore().collection('pacientes');\r\n    }\r\n\r\n    \r\n    //============================= BUSCAR COMO COORDENADOR =================================//\r\n    /**\r\n     * Busca todos os pacientes de um Coordenador\r\n     */\r\n    public async buscarTodos(): Promise<Paciente[]> {\r\n        console.log(this.usuarioID);\r\n        return this.pacienteDB.where('coordenadorUID', '==' ,this.usuarioID).where('excluido', '==', false).orderBy('nome').get().then(async snapshots => {\r\n            let pacientes:Paciente[] = [];\r\n            const retorno = snapshots.docs.map(async doc => {\r\n                let paciente = Object.assign(new Paciente, doc.data());\r\n                \r\n                await this.pacienteDB.doc(paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n                    snapshot.forEach(doc => {\r\n                        paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n                    })\r\n                })\r\n                return paciente;\r\n            });\r\n            await Promise.all(retorno).then(dados => { dados.forEach(p => {pacientes.push(Object.assign(new Paciente, p))}) })\r\n            console.log(pacientes);\r\n            return pacientes;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Busca o Paciente pelo seu ID unico \r\n     * @param uid \r\n     */\r\n    public async buscar(uid:string): Promise<Paciente> {\r\n        return this.pacienteDB\r\n            .where('coordenadorUID', '==' ,this.usuarioID)\r\n            .where('excluido', '==', false)\r\n            .where('uid', '==', uid)\r\n            .get().then(snapshot => {\r\n                if (snapshot.empty) return null;\r\n                return snapshot.docs[0].data() as Paciente;\r\n            })\r\n    }\r\n    //============================= BUSCAR COMO PACIENTE =================================//\r\n    /**\r\n     * Recupera os dados do Paciente logado\r\n     */\r\n    public async getPacienteLogado():Promise<Paciente> {\r\n        if (this.paciente != null && this.paciente.uid == this.usuarioID) \r\n            return this.paciente;\r\n\r\n        let doc = await this.pacienteDB.doc(this.usuarioID).get();\r\n        let dados = doc.data();\r\n       \r\n        await this.pacienteDB.where('excluido', '==', false)\r\n                       .where('coordenadorUID', '==', dados.coordenadorUID)\r\n                       .orderBy('diasSeguidosSemFumar', 'desc')\r\n                       .get().then(snapshat => {\r\n                            let rank = 0;\r\n                            snapshat.forEach(doc => {\r\n                                rank++;\r\n                                let p = doc.data();\r\n                                if (p.uid == this.usuarioID) dados['rank'] = rank;\r\n                            })\r\n                       })\r\n\r\n        this.paciente = Object.assign(new Paciente, dados);\r\n\r\n        await this.pacienteDB.doc(this.paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                this.paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n            })\r\n        })\r\n\r\n        return this.paciente;\r\n    }\r\n\r\n    /**\r\n     * Atualiza os dados do paciente\r\n     * @param paciente \r\n     */\r\n    public atualizarPaciente(paciente:Paciente) {\r\n        let dados = Object.assign({}, paciente);\r\n        delete dados.questionariosDiarios;\r\n        this.pacienteDB.doc(paciente.uid).update(dados);\r\n\r\n        if (this.paciente.uid == paciente.uid)\r\n            this.paciente = paciente;\r\n    }\r\n\r\n}"],"sourceRoot":""}