{"version":3,"sources":["./src/app/coordenador/pacientes/pacientes.page.html","./src/app/coordenador/pacientes/pacientes.module.ts","./src/app/coordenador/pacientes/pacientes.page.scss","./src/app/coordenador/pacientes/pacientes.page.ts","./src/app/models/paciente.ts","./src/app/models/questionario.ts","./src/app/services/paciente.service.ts"],"names":[],"mappings":"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","file":"pacientes-pacientes-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\r\\n    <!-- REFRESH -->\\r\\n    <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"refresh($event)\\\">\\r\\n      <ion-refresher-content\\r\\n        pullingIcon=\\\"arrow-dropdown\\\"\\r\\n        pullingText=\\\"Pull to refresh\\\"\\r\\n        refreshingSpinner=\\\"circles\\\"\\r\\n        refreshingText=\\\"Atualizando...\\\">\\r\\n      </ion-refresher-content>\\r\\n    </ion-refresher>\\r\\n\\r\\n    <!-- BOTÃO ADICIONAR PACIENTE -->\\r\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" routerLink=\\\"/coordenador/pacientes/novo\\\">\\r\\n      <ion-fab-button color=\\\"danger\\\">\\r\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\r\\n      </ion-fab-button>\\r\\n    </ion-fab>\\r\\n\\r\\n    <!-- PACIENTE -->\\r\\n    <ion-card class=\\\"card card-{{i%5}}\\\"  *ngFor=\\\"let p of pacientes; let i = index\\\" (click)=\\\"visualizar(p)\\\" >\\r\\n\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <ion-col size=\\\"2\\\"  class=\\\"ion-align-self-center\\\">\\r\\n              <ion-avatar>\\r\\n                <img [src]=\\\"p.avatarURL\\\">\\r\\n              </ion-avatar>\\r\\n          </ion-col>\\r\\n          <ion-col size=\\\"10\\\">\\r\\n            <ion-card-content>\\r\\n              <h2>{{p.nome}}</h2>\\r\\n              <h3>Código: <b>{{p.codigo}}</b></h3>\\r\\n              <ion-grid fixed>\\r\\n                <ion-row>\\r\\n                  <ion-col size=\\\"4\\\">Cigarros evitados</ion-col>\\r\\n                  <ion-col size=\\\"4\\\">Dias sem Fumar</ion-col>\\r\\n                  <ion-col size=\\\"4\\\">Max. dias sem fumar</ion-col>\\r\\n                </ion-row>\\r\\n                <ion-row>\\r\\n                  <ion-col size=\\\"4\\\"><b>{{p.cigarrosEvitados}}</b></ion-col>\\r\\n                  <ion-col size=\\\"4\\\"><b>{{p.diasSemFumar}}</b></ion-col>\\r\\n                  <ion-col size=\\\"4\\\"><b>{{p.maxDiasSemFumar}}</b></ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n\\r\\n\\r\\n            </ion-card-content>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n\\r\\n      </ion-card>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PacientesPage } from './pacientes.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PacientesPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PacientesPage]\r\n})\r\nexport class PacientesPageModule {}\r\n","module.exports = \".card-0 {\\n  --background:linear-gradient(to right, #ff8177 0%, #ff867a 0%, #ff8c7f 21%, #f99185 52%, #cf556c 78%, #b12a5b 100%);\\n  --color: white;\\n}\\n\\n.card-1 {\\n  --background:linear-gradient(120deg, #f6d365 0%, #fda085 100%);\\n  --color: white;\\n}\\n\\n.card-2 {\\n  --background:linear-gradient(to right, #4facfe 0%, #00f2fe 100%);\\n  --color: white;\\n}\\n\\n.card-3 {\\n  --background: linear-gradient(to top, #5ee7df 0%, #b490ca 100%);\\n  --color: white;\\n}\\n\\n.card-4 {\\n  --background: linear-gradient(to bottom, rgba(255,255,255,0.15) 0%, rgba(0,0,0,0.15) 100%), radial-gradient(at top center, rgba(255,255,255,0.40) 0%, rgba(0,0,0,0.40) 120%) #989898;\\n  --color: white;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29vcmRlbmFkb3IvcGFjaWVudGVzL0M6XFx4YW1wcFxcaHRkb2NzXFxuYW8tZnVtZS0vc3JjXFxhcHBcXGNvb3JkZW5hZG9yXFxwYWNpZW50ZXNcXHBhY2llbnRlcy5wYWdlLnNjc3MiLCJzcmMvYXBwL2Nvb3JkZW5hZG9yL3BhY2llbnRlcy9wYWNpZW50ZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksbUhBQUE7RUFDQSxjQUFBO0FDREo7O0FESUE7RUFDSSw4REFBQTtFQUNBLGNBQUE7QUNESjs7QURJQTtFQUNJLGdFQUFBO0VBQ0EsY0FBQTtBQ0RKOztBRElBO0VBQ0ksK0RBQUE7RUFDQSxjQUFBO0FDREo7O0FESUE7RUFDSSxvTEFBQTtFQUNBLGNBQUE7QUNESiIsImZpbGUiOiJzcmMvYXBwL2Nvb3JkZW5hZG9yL3BhY2llbnRlcy9wYWNpZW50ZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG4uY2FyZC0wIHtcclxuICAgIC0tYmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICNmZjgxNzcgMCUsICNmZjg2N2EgMCUsICNmZjhjN2YgMjElLCAjZjk5MTg1IDUyJSwgI2NmNTU2YyA3OCUsICNiMTJhNWIgMTAwJSk7XHJcbiAgICAtLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmNhcmQtMSB7XHJcbiAgICAtLWJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDEyMGRlZywgI2Y2ZDM2NSAwJSwgI2ZkYTA4NSAxMDAlKTtcclxuICAgIC0tY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uY2FyZC0yIHtcclxuICAgIC0tYmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICM0ZmFjZmUgMCUsICMwMGYyZmUgMTAwJSk7XHJcbiAgICAtLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmNhcmQtMyB7XHJcbiAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byB0b3AsICM1ZWU3ZGYgMCUsICNiNDkwY2EgMTAwJSk7XHJcbiAgICAtLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmNhcmQtNCB7XHJcbiAgICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjU1LDI1NSwyNTUsMC4xNSkgMCUsIHJnYmEoMCwwLDAsMC4xNSkgMTAwJSksIHJhZGlhbC1ncmFkaWVudChhdCB0b3AgY2VudGVyLCByZ2JhKDI1NSwyNTUsMjU1LDAuNDApIDAlLCByZ2JhKDAsMCwwLDAuNDApIDEyMCUpICM5ODk4OTg7IFxyXG4gICAgLS1jb2xvcjogd2hpdGU7XHJcbn0iLCIuY2FyZC0wIHtcbiAgLS1iYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCh0byByaWdodCwgI2ZmODE3NyAwJSwgI2ZmODY3YSAwJSwgI2ZmOGM3ZiAyMSUsICNmOTkxODUgNTIlLCAjY2Y1NTZjIDc4JSwgI2IxMmE1YiAxMDAlKTtcbiAgLS1jb2xvcjogd2hpdGU7XG59XG5cbi5jYXJkLTEge1xuICAtLWJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDEyMGRlZywgI2Y2ZDM2NSAwJSwgI2ZkYTA4NSAxMDAlKTtcbiAgLS1jb2xvcjogd2hpdGU7XG59XG5cbi5jYXJkLTIge1xuICAtLWJhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCAjNGZhY2ZlIDAlLCAjMDBmMmZlIDEwMCUpO1xuICAtLWNvbG9yOiB3aGl0ZTtcbn1cblxuLmNhcmQtMyB7XG4gIC0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgIzVlZTdkZiAwJSwgI2I0OTBjYSAxMDAlKTtcbiAgLS1jb2xvcjogd2hpdGU7XG59XG5cbi5jYXJkLTQge1xuICAtLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sIHJnYmEoMjU1LDI1NSwyNTUsMC4xNSkgMCUsIHJnYmEoMCwwLDAsMC4xNSkgMTAwJSksIHJhZGlhbC1ncmFkaWVudChhdCB0b3AgY2VudGVyLCByZ2JhKDI1NSwyNTUsMjU1LDAuNDApIDAlLCByZ2JhKDAsMCwwLDAuNDApIDEyMCUpICM5ODk4OTg7XG4gIC0tY29sb3I6IHdoaXRlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PacienteService } from 'src/app/services/paciente.service';\r\nimport { Paciente } from 'src/app/models/paciente';\r\nimport { NavExtrasService } from 'src/app/services/nav-extras.service';\r\nimport { Router } from '@angular/router';\r\nimport { Events } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-pacientes',\r\n  templateUrl: './pacientes.page.html',\r\n  styleUrls: ['./pacientes.page.scss'],\r\n})\r\nexport class PacientesPage implements OnInit {\r\n\r\n  pacientes: Paciente[] = []\r\n  \r\n  constructor(private pacientesService:PacienteService, private navExtra:NavExtrasService, private router:Router, private events: Events) { }\r\n\r\n  async ngOnInit() {\r\n    this.atualizarConteudos();\r\n    this.events.subscribe('pacientes:atualizar', (atualizar) => {\r\n      if (atualizar) this.atualizarConteudos();\r\n    })\r\n  }\r\n  \r\n\r\n  /**\r\n   * Abre a visualização para um paciente\r\n   */\r\n  visualizar(paciente:Paciente) {\r\n    this.navExtra.set('paciente', paciente);\r\n    this.router.navigateByUrl('/coordenador/pacientes/visualizar')\r\n  }\r\n\r\n  /**\r\n   * Atualiza a lista caso desejado\r\n   * @param event \r\n   */\r\n  async refresh(event) {\r\n    await this.atualizarConteudos();\r\n    event.target.complete();\r\n  }\r\n\r\n  /**\r\n   * Atualiza a lista \r\n   */\r\n  async atualizarConteudos(){\r\n    this.pacientes = await this.pacientesService.buscarTodos();\r\n    console.log('a')\r\n  }\r\n\r\n}\r\n","import { Questionario } from './questionario';\r\n\r\n/**\r\n * Classe com acesso ao dados do paciente\r\n */\r\nexport class Paciente {\r\n\r\n    // Lista a posição do paciente em relação aos demais\r\n    public rank = 0;\r\n\r\n    constructor(public uid?: string, public nome?: string, public codigo?: number,\r\n                public mediaCigarros: number = 0, public precoCigarro: number = 0.1,\r\n                public coordenadorUID?: string, public ultimoDiaRespondido?: string,\r\n                public avatar: number = 1,\r\n                public cigarrosEvitados: number = 0, public diasSeguidosSemFumar: number = 0,\r\n                public diasSemFumar: number = 0, public maxDiasSemFumar: number = 0,\r\n                public dinheiroAcumulado: number = 0, public dinheiroDisponivel: number = 0,\r\n                public primeiroAcesso: boolean = true,\r\n                public diasPraticoExercicio: number = 0, public excluido: boolean = false,\r\n                public questionariosDiarios: Questionario[] = []) { }\r\n\r\n    public get avatarURL(): string {\r\n        return `/assets/imgs/avatars/${this.avatar}.jpg`;\r\n    }\r\n}\r\n","/**\r\n * Questionário com os atributos das perguntas diarias\r\n */\r\nexport class Questionario {\r\n\r\n    /**\r\n     * @param dia | Dia da consulta (YYYY-MM-DD)\r\n     * @param humor | Como foi o humor do paciente 0 -> Baixo, 1 -> Médio, 2 -> Bom\r\n     * @param fumou | Se fumou naquele dia,\r\n     * @param cigarros | Quantidade de cigarros\r\n     * @param exercitou  | Se praticou exercicio\r\n     * @param vontadeFumar | Vontade de fumar 0 -> Baixa, 1 -> Normal, 2 -> Alta\r\n     */\r\n    constructor(public dia?: string,\r\n                public humor?: 0|1|2,\r\n                public fumou?: boolean,\r\n                public cigarros: number = 0,\r\n                public exercitou?: boolean,\r\n                public vontadeFumar?: 0|1|2) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment'\r\nimport * as firebase from 'firebase';\r\nimport { Paciente } from '../models/paciente';\r\nimport { Questionario } from '../models/questionario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Controla os dados dos questionários do paciente\r\n */\r\nexport class PacienteService {\r\n\r\n    private pacienteDB: firebase.firestore.CollectionReference;\r\n    private usuarioID:string;\r\n    private paciente:Paciente = null;\r\n\r\n\r\n    constructor() { \r\n        firebase.auth().onAuthStateChanged(user => { \r\n            if (user != null)\r\n                this.usuarioID = user.uid;\r\n        })\r\n        this.pacienteDB = firebase.firestore().collection('pacientes');\r\n    }\r\n\r\n    \r\n    //============================= BUSCAR COMO COORDENADOR =================================//\r\n    /**\r\n     * Busca todos os pacientes de um Coordenador\r\n     */\r\n    public async buscarTodos(): Promise<Paciente[]> {\r\n        console.log(this.usuarioID);\r\n        return this.pacienteDB.where('coordenadorUID', '==' ,this.usuarioID).where('excluido', '==', false).orderBy('nome').get().then(async snapshots => {\r\n            let pacientes:Paciente[] = [];\r\n            const retorno = snapshots.docs.map(async doc => {\r\n                let paciente = Object.assign(new Paciente, doc.data());\r\n                \r\n                await this.pacienteDB.doc(paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n                    snapshot.forEach(doc => {\r\n                        paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n                    })\r\n                })\r\n                return paciente;\r\n            });\r\n            await Promise.all(retorno).then(dados => { dados.forEach(p => {pacientes.push(Object.assign(new Paciente, p))}) })\r\n            console.log(pacientes);\r\n            return pacientes;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Busca o Paciente pelo seu ID unico \r\n     * @param uid \r\n     */\r\n    public async buscar(uid:string): Promise<Paciente> {\r\n        return this.pacienteDB\r\n            .where('coordenadorUID', '==' ,this.usuarioID)\r\n            .where('excluido', '==', false)\r\n            .where('uid', '==', uid)\r\n            .get().then(snapshot => {\r\n                if (snapshot.empty) return null;\r\n                return snapshot.docs[0].data() as Paciente;\r\n            })\r\n    }\r\n    //============================= BUSCAR COMO PACIENTE =================================//\r\n    /**\r\n     * Recupera os dados do Paciente logado\r\n     */\r\n    public async getPacienteLogado():Promise<Paciente> {\r\n        if (this.paciente != null && this.paciente.uid == this.usuarioID) \r\n            return this.paciente;\r\n\r\n        let doc = await this.pacienteDB.doc(this.usuarioID).get();\r\n        let dados = doc.data();\r\n       \r\n        await this.pacienteDB.where('excluido', '==', false)\r\n                       .where('coordenadorUID', '==', dados.coordenadorUID)\r\n                       .orderBy('diasSeguidosSemFumar', 'desc')\r\n                       .get().then(snapshat => {\r\n                            let rank = 0;\r\n                            snapshat.forEach(doc => {\r\n                                rank++;\r\n                                let p = doc.data();\r\n                                if (p.uid == this.usuarioID) dados['rank'] = rank;\r\n                            })\r\n                       })\r\n\r\n        this.paciente = Object.assign(new Paciente, dados);\r\n\r\n        await this.pacienteDB.doc(this.paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                this.paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n            })\r\n        })\r\n\r\n        return this.paciente;\r\n    }\r\n\r\n    /**\r\n     * Atualiza os dados do paciente\r\n     * @param paciente \r\n     */\r\n    public atualizarPaciente(paciente:Paciente) {\r\n        let dados = Object.assign({}, paciente);\r\n        delete dados.questionariosDiarios;\r\n        this.pacienteDB.doc(paciente.uid).update(dados);\r\n\r\n        if (this.paciente.uid == paciente.uid)\r\n            this.paciente = paciente;\r\n    }\r\n\r\n}"],"sourceRoot":""}