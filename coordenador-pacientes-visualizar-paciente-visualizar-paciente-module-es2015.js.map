{"version":3,"sources":["./src/app/coordenador/pacientes/visualizar-paciente/visualizar-paciente.page.html","./src/app/coordenador/pacientes/visualizar-paciente/visualizar-paciente.module.ts","./src/app/coordenador/pacientes/visualizar-paciente/visualizar-paciente.page.scss","./src/app/coordenador/pacientes/visualizar-paciente/visualizar-paciente.page.ts","./src/app/models/paciente.ts","./src/app/models/questionario.ts","./src/app/pipes/data-brasil.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/services/paciente.service.ts"],"names":[],"mappings":"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","file":"coordenador-pacientes-visualizar-paciente-visualizar-paciente-module-es2015.js","sourcesContent":["module.exports = \"\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n    <ion-toolbar color=\\\"primary\\\">\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n          <ion-back-button defaultHref=\\\"/coordenador/pacientes\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n    \\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n          <ion-button (click)=\\\"editar()\\\">\\r\\n            Editar\\r\\n          </ion-button>\\r\\n          \\r\\n        </ion-buttons>\\r\\n    \\r\\n      </ion-toolbar>\\r\\n\\r\\n    <div id=\\\"header\\\">\\r\\n      <ion-grid fixed>\\r\\n        <ion-row>\\r\\n          <!-- AVATAR -->\\r\\n          <ion-col size=\\\"4\\\">\\r\\n            \\r\\n            <ion-text color=\\\"light\\\" class=\\\"ion-text-center\\\">\\r\\n              <h3>Paciente</h3>\\r\\n            </ion-text>\\r\\n            \\r\\n            <ion-avatar id=\\\"avatar\\\" class=\\\"ion-align-items-center\\\">\\r\\n              <img [src]=\\\"paciente.avatarURL\\\" />\\r\\n            </ion-avatar>\\r\\n\\r\\n            <ion-text color=\\\"light\\\" class=\\\"ion-text-center\\\">\\r\\n              <p>Código: {{paciente.codigo}}</p>\\r\\n            </ion-text>\\r\\n              \\r\\n\\r\\n          </ion-col>\\r\\n          <!-- DADOS -->\\r\\n          <ion-col size=\\\"8\\\">\\r\\n            <ion-list id=\\\"perfil\\\">\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label>{{paciente.nome}}</ion-label>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-badge slot=\\\"start\\\">0</ion-badge>\\r\\n                <ion-label>Sessões idas</ion-label>\\r\\n              </ion-item>\\r\\n  \\r\\n\\r\\n              <ion-item>\\r\\n                <ion-badge slot=\\\"start\\\">{{paciente.diasSemFumar}}</ion-badge>\\r\\n                <ion-label>Dias sem fumar</ion-label>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                  <ion-badge slot=\\\"start\\\">{{paciente.mediaCigarros}}</ion-badge>\\r\\n                  <ion-label>Média cigarro ao dia</ion-label>\\r\\n                </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-badge slot=\\\"start\\\">{{paciente.cigarrosEvitados}}</ion-badge>\\r\\n                <ion-label>Cigarros evitados</ion-label>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-badge slot=\\\"start\\\" color=\\\"success\\\">R$ {{paciente.dinheiroAcumulado.toFixed(2)}}</ion-badge>\\r\\n                <ion-label>Economizado</ion-label>\\r\\n              </ion-item>\\r\\n\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"top\\\">\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- HISTORICO -->\\r\\n    <ion-text color=\\\"medium\\\" class=\\\"ion-text-center\\\">\\r\\n      <h1>Histórico</h1>\\r\\n    </ion-text>\\r\\n    <ion-list>\\r\\n\\r\\n      <ion-item>\\r\\n          <ion-grid fixed>\\r\\n              <ion-row>\\r\\n                <ion-col size=\\\"3\\\">\\r\\n                  <ion-label class=\\\"cabecalho\\\">Data</ion-label>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"3\\\">\\r\\n                  <ion-label  class=\\\"cabecalho ion-text-wrap\\\">Abstinente</ion-label>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\">\\r\\n                  <ion-label class=\\\"cabecalho ion-text-wrap\\\">Vontade</ion-label>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\">\\r\\n                  <ion-label class=\\\"cabecalho ion-text-wrap\\\">Praticou</ion-label>\\r\\n                </ion-col>\\r\\n                <ion-col size=\\\"2\\\">\\r\\n                  <ion-label class=\\\"cabecalho ion-text-wrap\\\">Humor</ion-label>\\r\\n                </ion-col>\\r\\n              </ion-row>\\r\\n            </ion-grid>\\r\\n      </ion-item>\\r\\n\\r\\n\\r\\n      <ion-item *ngFor=\\\"let dia of paciente.questionariosDiarios\\\">\\r\\n\\r\\n        <ion-grid fixed>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-label style=\\\"font-size:12px;\\\">{{dia.dia | dataBrasil}}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-badge color=\\\"success\\\" *ngIf=\\\"!dia.fumou\\\">SIM</ion-badge>\\r\\n              <ion-badge color=\\\"danger\\\" *ngIf=\\\"dia.fumou\\\">NÃO</ion-badge>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"2\\\">\\r\\n                <ion-badge color=\\\"success\\\" *ngIf=\\\"dia.vontadeFumar == 0\\\">BAIXA</ion-badge>\\r\\n                <ion-badge color=\\\"warning\\\" *ngIf=\\\"dia.vontadeFumar == 1\\\">MÉDIA</ion-badge>\\r\\n                <ion-badge color=\\\"danger\\\" *ngIf=\\\"dia.vontadeFumar == 2\\\">ALTA</ion-badge>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"2\\\">\\r\\n                <ion-badge color=\\\"success\\\" *ngIf=\\\"dia.exercitou\\\">SIM</ion-badge>\\r\\n              <ion-badge color=\\\"danger\\\" *ngIf=\\\"!dia.exercitou\\\">NÃO</ion-badge>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"2\\\">\\r\\n                <ion-badge color=\\\"danger\\\" *ngIf=\\\"dia.humor == 0\\\">BAIXO</ion-badge>\\r\\n                <ion-badge color=\\\"warning\\\" *ngIf=\\\"dia.humor == 1\\\">MÉDIO</ion-badge>\\r\\n                <ion-badge color=\\\"success\\\" *ngIf=\\\"dia.humor == 2\\\">ALTO</ion-badge>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { VisualizarPacientePage } from './visualizar-paciente.page';\r\nimport { PipesModule } from 'src/app/pipes/pipes.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VisualizarPacientePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    PipesModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [VisualizarPacientePage]\r\n})\r\nexport class VisualizarPacientePageModule {}\r\n","module.exports = \"#header {\\n  background: -webkit-gradient(linear, left top, left bottom, from(#009efd), to(#0c2dd4));\\n  background: linear-gradient(#009efd, #0c2dd4);\\n  height: 300px;\\n}\\n\\n#avatar {\\n  height: 100px;\\n  width: 100px;\\n}\\n\\n#top {\\n  background: url('user-top.png');\\n  background-size: 100% 70px;\\n  height: 70px;\\n  margin-bottom: -30px;\\n}\\n\\n.cabecalho {\\n  font-size: 12px;\\n  font-weight: bolder;\\n  text-align: center;\\n}\\n\\n#perfil {\\n  border-radius: 25px;\\n  --background: rgba(255, 255, 255, 0.3);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29vcmRlbmFkb3IvcGFjaWVudGVzL3Zpc3VhbGl6YXItcGFjaWVudGUvQzpcXHhhbXBwXFxodGRvY3NcXG5hby1mdW1lLS9zcmNcXGFwcFxcY29vcmRlbmFkb3JcXHBhY2llbnRlc1xcdmlzdWFsaXphci1wYWNpZW50ZVxcdmlzdWFsaXphci1wYWNpZW50ZS5wYWdlLnNjc3MiLCJzcmMvYXBwL2Nvb3JkZW5hZG9yL3BhY2llbnRlcy92aXN1YWxpemFyLXBhY2llbnRlL3Zpc3VhbGl6YXItcGFjaWVudGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0ksdUZBQUE7RUFBQSw2Q0FBQTtFQUNBLGFBQUE7QUNESjs7QURJQTtFQUNJLGFBQUE7RUFDQSxZQUFBO0FDREo7O0FESUE7RUFDSSwrQkFBQTtFQUNBLDBCQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0FDREo7O0FESUE7RUFDSSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQ0RKOztBRElBO0VBQ0ksbUJBQUE7RUFDQSxzQ0FBQTtBQ0RKIiwiZmlsZSI6InNyYy9hcHAvY29vcmRlbmFkb3IvcGFjaWVudGVzL3Zpc3VhbGl6YXItcGFjaWVudGUvdmlzdWFsaXphci1wYWNpZW50ZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbiNoZWFkZXIge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMwMDllZmQgICwjMGMyZGQ0KTtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbn1cclxuXHJcbiNhdmF0YXIge1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIHdpZHRoOiAxMDBweDtcclxufVxyXG5cclxuI3RvcCB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4vLi4vLi4vLi4vLi4vYXNzZXRzL2ltZ3MvdXNlci10b3AucG5nJyk7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgNzBweDtcclxuICAgIGhlaWdodDogNzBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IC0zMHB4O1xyXG59XHJcblxyXG4uY2FiZWNhbGhvIHtcclxuICAgIGZvbnQtc2l6ZToxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuI3BlcmZpbCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyNXB4O1xyXG4gICAgLS1iYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XHJcbn0iLCIjaGVhZGVyIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMwMDllZmQsICMwYzJkZDQpO1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuXG4jYXZhdGFyIHtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgd2lkdGg6IDEwMHB4O1xufVxuXG4jdG9wIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi8uLi8uLi8uLi8uLi9hc3NldHMvaW1ncy91c2VyLXRvcC5wbmdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSA3MHB4O1xuICBoZWlnaHQ6IDcwcHg7XG4gIG1hcmdpbi1ib3R0b206IC0zMHB4O1xufVxuXG4uY2FiZWNhbGhvIHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogYm9sZGVyO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbiNwZXJmaWwge1xuICBib3JkZXItcmFkaXVzOiAyNXB4O1xuICAtLWJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PacienteService } from 'src/app/services/paciente.service';\r\nimport { Params, ActivatedRoute, Router } from '@angular/router';\r\nimport { Paciente } from 'src/app/models/paciente';\r\nimport { NavExtrasService } from 'src/app/services/nav-extras.service';\r\nimport { Questionario } from 'src/app/models/questionario';\r\n\r\n@Component({\r\n  selector: 'app-visualizar-paciente',\r\n  templateUrl: './visualizar-paciente.page.html',\r\n  styleUrls: ['./visualizar-paciente.page.scss'],\r\n})\r\nexport class VisualizarPacientePage implements OnInit {\r\n\r\n  paciente:Paciente =  new Paciente();\r\n  constructor(private pacienteService:PacienteService, private activatedRouter:ActivatedRoute, \r\n      private navExtra: NavExtrasService, private router:Router) { }\r\n\r\n  async ngOnInit() {\r\n    this.paciente = this.navExtra.get('paciente')\r\n  }\r\n\r\n  public editar() {\r\n    this.navExtra.set('paciente', this.paciente);\r\n    this.router.navigateByUrl('/coordenador/pacientes/editar')\r\n  }\r\n\r\n}\r\n","import { Questionario } from './questionario';\r\n\r\n/**\r\n * Classe com acesso ao dados do paciente\r\n */\r\nexport class Paciente {\r\n\r\n    // Lista a posição do paciente em relação aos demais\r\n    public rank = 0;\r\n\r\n    constructor(public uid?: string, public nome?: string, public codigo?: number,\r\n                public mediaCigarros: number = 0, public precoCigarro: number = 0.1,\r\n                public coordenadorUID?: string, public ultimoDiaRespondido?: string,\r\n                public avatar: number = 1,\r\n                public cigarrosEvitados: number = 0, public diasSeguidosSemFumar: number = 0,\r\n                public diasSemFumar: number = 0, public maxDiasSemFumar: number = 0,\r\n                public dinheiroAcumulado: number = 0, public dinheiroDisponivel: number = 0,\r\n                public primeiroAcesso: boolean = true,\r\n                public diasPraticoExercicio: number = 0, public excluido: boolean = false,\r\n                public questionariosDiarios: Questionario[] = []) { }\r\n\r\n    public get avatarURL(): string {\r\n        return `/nao-fume-site/assets/imgs/avatars/${this.avatar}.jpg`;\r\n    }\r\n}\r\n","/**\r\n * Questionário com os atributos das perguntas diarias\r\n */\r\nexport class Questionario {\r\n\r\n    /**\r\n     * @param dia | Dia da consulta (YYYY-MM-DD)\r\n     * @param humor | Como foi o humor do paciente 0 -> Baixo, 1 -> Médio, 2 -> Bom\r\n     * @param fumou | Se fumou naquele dia,\r\n     * @param cigarros | Quantidade de cigarros\r\n     * @param exercitou  | Se praticou exercicio\r\n     * @param vontadeFumar | Vontade de fumar 0 -> Baixa, 1 -> Normal, 2 -> Alta\r\n     */\r\n    constructor(public dia?: string,\r\n                public humor?: 0|1|2,\r\n                public fumou?: boolean,\r\n                public cigarros: number = 0,\r\n                public exercitou?: boolean,\r\n                public vontadeFumar?: 0|1|2) { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'dataBrasil'\r\n})\r\n/**\r\n * Um Pipe que converte o formato de Y-m-d para d/m/Y\r\n * @author Carlos W. Gama\r\n */\r\nexport class DataBrasilPipe implements PipeTransform {\r\n\r\n  transform(value: string, ...args: any[]): any {\r\n    if (args[0] != true)\r\n      return value.split('-').reverse().join('/');\r\n    else {\r\n      let dataHora = value.split(' ');\r\n      return dataHora[0].split('-').reverse().join('/') + ' ' + dataHora[1];\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataBrasilPipe } from './data-brasil.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [DataBrasilPipe],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [DataBrasilPipe]\r\n})\r\nexport class PipesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment'\r\nimport * as firebase from 'firebase';\r\nimport { Paciente } from '../models/paciente';\r\nimport { Questionario } from '../models/questionario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Controla os dados dos questionários do paciente\r\n */\r\nexport class PacienteService {\r\n\r\n    private pacienteDB: firebase.firestore.CollectionReference;\r\n    private usuarioID:string;\r\n    private paciente:Paciente = null;\r\n\r\n\r\n    constructor() { \r\n        firebase.auth().onAuthStateChanged(user => { \r\n            if (user != null)\r\n                this.usuarioID = user.uid;\r\n        })\r\n        this.pacienteDB = firebase.firestore().collection('pacientes');\r\n    }\r\n\r\n    \r\n    //============================= BUSCAR COMO COORDENADOR =================================//\r\n    /**\r\n     * Busca todos os pacientes de um Coordenador\r\n     */\r\n    public async buscarTodos(): Promise<Paciente[]> {\r\n        console.log(this.usuarioID);\r\n        return this.pacienteDB.where('coordenadorUID', '==' ,this.usuarioID).where('excluido', '==', false).orderBy('nome').get().then(async snapshots => {\r\n            let pacientes:Paciente[] = [];\r\n            const retorno = snapshots.docs.map(async doc => {\r\n                let paciente = Object.assign(new Paciente, doc.data());\r\n                \r\n                await this.pacienteDB.doc(paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n                    snapshot.forEach(doc => {\r\n                        paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n                    })\r\n                })\r\n                return paciente;\r\n            });\r\n            await Promise.all(retorno).then(dados => { dados.forEach(p => {pacientes.push(Object.assign(new Paciente, p))}) })\r\n            console.log(pacientes);\r\n            return pacientes;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Busca o Paciente pelo seu ID unico \r\n     * @param uid \r\n     */\r\n    public async buscar(uid:string): Promise<Paciente> {\r\n        return this.pacienteDB\r\n            .where('coordenadorUID', '==' ,this.usuarioID)\r\n            .where('excluido', '==', false)\r\n            .where('uid', '==', uid)\r\n            .get().then(snapshot => {\r\n                if (snapshot.empty) return null;\r\n                return snapshot.docs[0].data() as Paciente;\r\n            })\r\n    }\r\n    //============================= BUSCAR COMO PACIENTE =================================//\r\n    /**\r\n     * Recupera os dados do Paciente logado\r\n     */\r\n    public async getPacienteLogado():Promise<Paciente> {\r\n        if (this.paciente != null && this.paciente.uid == this.usuarioID) \r\n            return this.paciente;\r\n\r\n        let doc = await this.pacienteDB.doc(this.usuarioID).get();\r\n        let dados = doc.data();\r\n       \r\n        await this.pacienteDB.where('excluido', '==', false)\r\n                       .where('coordenadorUID', '==', dados.coordenadorUID)\r\n                       .orderBy('diasSeguidosSemFumar', 'desc')\r\n                       .get().then(snapshat => {\r\n                            let rank = 0;\r\n                            snapshat.forEach(doc => {\r\n                                rank++;\r\n                                let p = doc.data();\r\n                                if (p.uid == this.usuarioID) dados['rank'] = rank;\r\n                            })\r\n                       })\r\n\r\n        this.paciente = Object.assign(new Paciente, dados);\r\n\r\n        await this.pacienteDB.doc(this.paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                this.paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n            })\r\n        })\r\n\r\n        return this.paciente;\r\n    }\r\n\r\n    /**\r\n     * Atualiza os dados do paciente\r\n     * @param paciente \r\n     */\r\n    public atualizarPaciente(paciente:Paciente) {\r\n        let dados = Object.assign({}, paciente);\r\n        delete dados.questionariosDiarios;\r\n        this.pacienteDB.doc(paciente.uid).update(dados);\r\n\r\n        if (this.paciente.uid == paciente.uid)\r\n            this.paciente = paciente;\r\n    }\r\n\r\n}"],"sourceRoot":""}