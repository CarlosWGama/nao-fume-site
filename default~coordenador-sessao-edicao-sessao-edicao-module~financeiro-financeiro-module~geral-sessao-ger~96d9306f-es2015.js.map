{"version":3,"sources":["./src/app/models/sessao.ts","./src/app/services/sessao.service.ts"],"names":[],"mappings":"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","file":"default~coordenador-sessao-edicao-sessao-edicao-module~financeiro-financeiro-module~geral-sessao-ger~96d9306f-es2015.js","sourcesContent":["/**\r\n * Armazena os dados da sessão\r\n */\r\nexport class Sessao {\r\n    /**\r\n     * \r\n     * @param id \r\n     * @param data \r\n     * @param disponivel | Se a sessão já está disponivel para o pessoal resposnder \r\n     * @param dadosPacientes \r\n     */\r\n    constructor(public id?:string, public data?:string, public coordenadorUID?:string, public disponivel:boolean = false, public dadosPacientes: DadosPacientesSessao[] = [], public excluido:boolean = false) {}\r\n\r\n    /**\r\n     * Checa se o paciente esteve presente\r\n     */\r\n    public presente(pacienteID:string):boolean {\r\n        let presente = false;\r\n        this.dadosPacientes.forEach(p => {\r\n            if (p.pacienteUID = pacienteID) {\r\n                presente = p.presente;\r\n                return;\r\n            }\r\n        })\r\n        return presente;\r\n    }\r\n\r\n    get totalPacientes():number {\r\n        return this.dadosPacientes.length;\r\n    }\r\n\r\n    get totalPresentes():number {\r\n        return this.dadosPacientes.reduce((acumulador, p) => {\r\n            if (p.presente) acumulador++;\r\n            return acumulador;\r\n        }, 0);\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class DadosPacientesSessao {\r\n\r\n    constructor(public pacienteUID?:string, public presente:boolean = false, public nome:string = null,\r\n        public situacao:SituacaoSessao = null, public opiniao:string = null) {}\r\n}\r\n\r\n/**\r\n * ENUM da Situação do Paciente\r\n */\r\nexport enum SituacaoSessao {\r\n    ABSTINENTE = 1,\r\n    FUMANDO = 2,\r\n    MANUTENCAO = 3\r\n}","import { Injectable } from '@angular/core';\r\nimport { Sessao, DadosPacientesSessao, SituacaoSessao } from '../models/sessao';\r\nimport * as firebase from 'firebase';\r\nimport { SessaoPage } from '../coordenador/sessao/sessao.page';\r\nimport { Paciente } from '../models/paciente';\r\nimport { Events } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessaoService {\r\n\r\n  private sessaoDB:firebase.firestore.CollectionReference;\r\n  private pacienteDB:firebase.firestore.Query;\r\n  private usuario:firebase.User;\r\n\r\n  constructor(private events:Events) { \r\n    this.sessaoDB = firebase.firestore().collection('sessoes');\r\n    \r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.usuario = user;\r\n      if (this.usuario != null)\r\n        this.pacienteDB = firebase.firestore().collection('pacientes').where('coordenadorUID', '==', this.usuario.uid).where('excluido', '==', false);\r\n    })\r\n  }\r\n  // ======================================== COORDENADOR =======================================/\r\n  /**\r\n   * Busca todas as sessões do coordenador\r\n   * Checa se o usuário qeu está solicitando é coordenador\r\n   */\r\n  public async buscarTodos(coordenadorUID:string = null):Promise<Sessao[]> {\r\n    if (!coordenadorUID) coordenadorUID = this.usuario.uid;\r\n    return this.sessaoDB\r\n      .where('excluido', '==', false)\r\n      .where('coordenadorUID', '==', coordenadorUID)\r\n      .orderBy('data', 'asc')\r\n      .get().then(async sessoesSnapshot => {\r\n        let sessoes:Sessao[] = [];\r\n\r\n        //busca sessões  \r\n        const resultSessoes = sessoesSnapshot.docs.map(async sessaoDOC => {\r\n          let dadosSessao = Object.assign(new Sessao, sessaoDOC.data());\r\n          \r\n          //Busca Pacientes das sessões\r\n          await this.sessaoDB.doc(dadosSessao.id).collection('pacientes').get().then(async pacientesSnapshot => {\r\n            dadosSessao.dadosPacientes = await Promise.all(pacientesSnapshot.docs.map(async pacienteDOC => {\r\n              let dadosPaciente = Object.assign(new DadosPacientesSessao, pacienteDOC.data());\r\n              dadosPaciente.nome = (await firebase.firestore().collection('pacientes').doc(dadosPaciente.pacienteUID).get()).data()['nome'];\r\n              return dadosPaciente;\r\n            }))\r\n          });\r\n          return dadosSessao;\r\n        })\r\n        sessoes = await Promise.all(resultSessoes);\r\n        return sessoes;\r\n\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Cadastra uma nova seção\r\n   */\r\n  public async cadastrar(sessao:Sessao):Promise<boolean> {\r\n    let doc = this.sessaoDB.doc();\r\n    //Cadastra a Sessão\r\n    sessao.coordenadorUID = this.usuario.uid;\r\n    delete sessao.dadosPacientes;\r\n    sessao.id = doc.id;\r\n    await doc.set(Object.assign({}, sessao));\r\n    //Cadastra os Pacientes na sessão\r\n    let snapshot = await this.pacienteDB.get();\r\n    snapshot.forEach(pacienteDOC => {\r\n      let dados = pacienteDOC.data();\r\n      let pacienteDados = new DadosPacientesSessao(pacienteDOC.id, false, dados.nome);\r\n      this.sessaoDB.doc(sessao.id).collection('pacientes').doc(pacienteDOC.id).set(Object.assign({}, pacienteDados))\r\n    })\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Atualiza uma sessão existente\r\n   */\r\n  public async atualizar(sessao:Sessao):Promise<boolean> {\r\n    //Atualiza a sessão\r\n    await this.sessaoDB.doc(sessao.id).update({\r\n      data:sessao.data,\r\n      disponivel: sessao.disponivel\r\n    })\r\n\r\n    //Atualiza os pacientes\r\n    sessao.dadosPacientes.forEach(async dado => {\r\n      console.log(dado);\r\n      await this.sessaoDB.doc(sessao.id).collection('pacientes').doc(dado.pacienteUID).update({\r\n        presente:dado.presente,\r\n        situacao:(dado.situacao != undefined ? dado.situacao : null),\r\n        opiniao:dado.opiniao\r\n      })\r\n    })\r\n    return true;\r\n  }\r\n\r\n   /**\r\n   * Remove a sessão do sistema\r\n   */\r\n  public async remover(sessaoID:string):Promise<boolean> {\r\n    //Atualiza a sessão\r\n    await this.sessaoDB.doc(sessaoID).update({\r\n      excluido: true\r\n    })\r\n    return true;\r\n  }\r\n\r\n  // =========================== PACIENTE ============================================//\r\n  public buscarSessoes(paciente:Paciente):Promise<Sessao[]> {\r\n     \r\n    return this.sessaoDB\r\n      .where('excluido', '==', false)\r\n      .where('coordenadorUID', '==', paciente.coordenadorUID)\r\n      .orderBy('data', 'asc')\r\n      .get().then(sessoesSnapshot => {\r\n\r\n        let sessoes:Sessao[] = [];\r\n        \r\n        sessoesSnapshot.forEach(async doc => {\r\n          let dadosSessao = Object.assign(new Sessao, doc.data());\r\n          await this.sessaoDB.doc(dadosSessao.id).collection('pacientes').doc(paciente.uid).get().then(sessaodoc => {\r\n            let dadosPaciente = Object.assign(new DadosPacientesSessao, sessaodoc.data());\r\n            dadosSessao.dadosPacientes.push(dadosPaciente);\r\n          })\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          sessoes.push(dadosSessao);\r\n        })\r\n\r\n        return sessoes;\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Paciente responde sobre a sessão\r\n   * @param sessaoID \r\n   * @param comentario \r\n   */\r\n  public responder(sessaoID:string, comentario:string) {\r\n    this.sessaoDB.doc(sessaoID).collection('pacientes').doc(this.usuario.uid).update({\r\n      opiniao:comentario\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retorna as sessões que o paciente deve responder\r\n   */\r\n  public async buscarSessoesResponder(paciente:Paciente): Promise<Sessao[]>{\r\n    \r\n    const sessoes = [];\r\n\r\n    //Busca todas as sessões\r\n    const snapshots = await this.sessaoDB.where('coordenadorUID', '==', paciente.coordenadorUID)\r\n                              .where('excluido', '==', false)\r\n                              .where('disponivel', '==', true).get();\r\n    //Busca as sessões \r\n    let buscaSessoes = snapshots.docs.map(async snapshot => {\r\n      let sessao = Object.assign(new Sessao(), snapshot.data());\r\n\r\n      //Avalia se o usuário respondeu a sessão\r\n      let doc = await this.sessaoDB.doc(sessao.id).collection('pacientes').doc(paciente.uid).get();\r\n      let dados = doc.data();\r\n    \r\n      if (dados == null) return null;\r\n\r\n      //Envia apenas as sessões que o usuário ainda não deu sua opinião\r\n      if (dados.opiniao == null) {\r\n        //Recupera os  dados do paciente na lista da sessão\r\n        const pacienteDOC = await this.sessaoDB.doc(sessao.id).collection('pacientes').doc(paciente.uid).get()\r\n        let dadosPaciente = Object.assign(new DadosPacientesSessao, pacienteDOC.data());\r\n        dadosPaciente.nome = (await firebase.firestore().collection('pacientes').doc(dadosPaciente.pacienteUID).get()).data()['nome'];\r\n        sessao.dadosPacientes.push(dadosPaciente);\r\n      }\r\n\r\n      return (dados.opiniao == null ? sessao : null);\r\n    });\r\n\r\n    const retorno = await Promise.all(buscaSessoes);\r\n    //Salva na constante apenas as sessões encontradas\r\n    retorno.forEach(s => { if (s != null) sessoes.push(s); })\r\n    \r\n    return sessoes;\r\n  }\r\n}\r\n"],"sourceRoot":""}