{"version":3,"sources":["./src/app/paciente/financeiro/financeiro.page.html","./src/app/models/meta.ts","./src/app/paciente/financeiro/financeiro.module.ts","./src/app/paciente/financeiro/financeiro.page.scss","./src/app/paciente/financeiro/financeiro.page.ts","./src/app/services/financeiro.service.ts"],"names":[],"mappings":"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","file":"financeiro-financeiro-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\r\\n\\r\\n    <div id=\\\"relatorio\\\" class=\\\"ion-padding\\\">\\r\\n        <ion-text color=\\\"light\\\" class=\\\"ion-text-center\\\">\\r\\n            <h1 style=\\\"margin-top:-5px\\\">Total economizado R$ {{paciente.dinheiroAcumulado.toFixed(2)}}</h1>\\r\\n            <h4 style=\\\"margin-top:-5px\\\">Dispon√≠vel R$ {{paciente.dinheiroDisponivel.toFixed(2)}}</h4>\\r\\n        </ion-text>\\r\\n    </div>\\r\\n\\r\\n    <!-- METAS -->\\r\\n    <div id=\\\"metas\\\">\\r\\n\\r\\n        <ion-text color=\\\"medium\\\" class=\\\"ion-text-center\\\">\\r\\n            <h1>Metas </h1>\\r\\n        </ion-text>\\r\\n\\r\\n        <!-- NENHUMA META CADASTRADA -->\\r\\n        <ion-text color=\\\"dark\\\" class=\\\"ion-text-center\\\" *ngIf=\\\"metas.length == 0\\\">\\r\\n            <p>Nenhuma meta cadastrada ainda</p>\\r\\n            <p>Clique no + para cadastrar uma nova meta</p>\\r\\n        </ion-text>\\r\\n\\r\\n        <!-- METAS CADASTRADAS -->\\r\\n        <ion-card *ngFor=\\\"let meta of metas\\\">\\r\\n            <ion-card-header>\\r\\n                <ion-card-title>{{meta.titulo}}</ion-card-title>\\r\\n            </ion-card-header>\\r\\n            <ion-card-content>\\r\\n                <ion-grid fixed>\\r\\n                    <ion-row>\\r\\n                        <ion-col size=\\\"6\\\"><ion-text>Objetivo: R$ {{meta.objetivo.toFixed(2)}}</ion-text></ion-col>\\r\\n                        <ion-col size=\\\"6\\\">\\r\\n                            <ion-badge *ngIf=\\\"!meta.usado && meta.objetivo <= paciente.dinheiroDisponivel\\\" color=\\\"tertiary\\\" mode=\\\"ios\\\">Pode usar!</ion-badge>\\r\\n                            <ion-badge *ngIf=\\\"meta.usado\\\" color=\\\"success\\\" mode=\\\"ios\\\">REALIZADO!</ion-badge>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n               \\r\\n                <app-progress-bar [atual]=\\\"paciente.dinheiroDisponivel\\\" [max]=\\\"meta.objetivo\\\"></app-progress-bar>\\r\\n                \\r\\n                <div class=\\\"card-buttons\\\">\\r\\n                    <ion-button (click)=\\\"remover(meta)\\\" color=\\\"danger\\\" fill=\\\"outline\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" name=\\\"trash\\\"></ion-icon>\\r\\n                        Remover\\r\\n                    </ion-button>\\r\\n\\r\\n                    <ion-button *ngIf=\\\"!meta.usado && meta.objetivo <= paciente.dinheiroDisponivel\\\" (click)=\\\"usar(meta)\\\" color=\\\"success\\\" fill=\\\"outline\\\">\\r\\n                        <ion-icon slot=\\\"start\\\" name=\\\"checkmark\\\"></ion-icon>\\r\\n                        Usar\\r\\n                    </ion-button>\\r\\n                </div>\\r\\n\\r\\n            </ion-card-content>\\r\\n        </ion-card>\\r\\n    </div>\\r\\n\\r\\n    <ion-fab vertical=\\\"top\\\" horizontal=\\\"end\\\">\\r\\n        <ion-fab-button color=\\\"danger\\\" (click)=\\\"adicionar()\\\"><ion-icon name=\\\"add\\\"></ion-icon></ion-fab-button>\\r\\n    </ion-fab>\\r\\n\\r\\n</ion-content>\\r\\n\"","/**\r\n * Define a meta financeira de um paciente\r\n */\r\nexport class Meta {\r\n    constructor(public titulo?: string, public objetivo?: number,\r\n                public usado: boolean = false, public pacienteUID?: string,\r\n                public uid?: string) {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FinanceiroPage } from './financeiro.page';\r\nimport { ComponentsModule } from 'src/app/components/components.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FinanceiroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ComponentsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [FinanceiroPage]\r\n})\r\nexport class FinanceiroPageModule {}\r\n","module.exports = \"#relatorio {\\n  background: -webkit-gradient(linear, left top, left bottom, color-stop(50%, #f04141), to(rgba(255, 255, 255, 0)));\\n  background: linear-gradient(#f04141 50%, rgba(255, 255, 255, 0));\\n  width: 100%;\\n  height: 30%;\\n}\\n\\n#metas {\\n  width: 100%;\\n  height: 70%;\\n  overflow-y: scroll;\\n}\\n\\n.card-buttons {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-pack: justify;\\n          justify-content: space-between;\\n}\\n\\nion-fab {\\n  margin-top: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFjaWVudGUvZmluYW5jZWlyby9DOlxceGFtcHBcXGh0ZG9jc1xcbmFvLWZ1bWUtL3NyY1xcYXBwXFxwYWNpZW50ZVxcZmluYW5jZWlyb1xcZmluYW5jZWlyby5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhY2llbnRlL2ZpbmFuY2Vpcm8vZmluYW5jZWlyby5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpSEFBQTtFQUFBLGdFQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7QUNDSjs7QURFQTtFQUNJLFdBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURFQTtFQUNJLG9CQUFBO0VBQUEsYUFBQTtFQUNBLHlCQUFBO1VBQUEsOEJBQUE7QUNDSjs7QURFQTtFQUNJLGlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWNpZW50ZS9maW5hbmNlaXJvL2ZpbmFuY2Vpcm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3JlbGF0b3JpbyB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoI2YwNDE0MSA1MCUsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMCkpO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDMwJTtcclxufVxyXG5cclxuI21ldGFzIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA3MCU7XHJcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7XHJcbn1cclxuXHJcbi5jYXJkLWJ1dHRvbnMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxufVxyXG5cclxuaW9uLWZhYiB7XHJcbiAgICBtYXJnaW4tdG9wOjE1MHB4XHJcbn0iLCIjcmVsYXRvcmlvIHtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNmMDQxNDEgNTAlLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApKTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMzAlO1xufVxuXG4jbWV0YXMge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA3MCU7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbn1cblxuLmNhcmQtYnV0dG9ucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuaW9uLWZhYiB7XG4gIG1hcmdpbi10b3A6IDE1MHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ToastController, AlertController } from '@ionic/angular';\r\nimport { FinanceiroService } from 'src/app/services/financeiro.service';\r\nimport { PacienteService } from 'src/app/services/paciente.service';\r\nimport { Paciente } from 'src/app/models/paciente';\r\nimport { Meta } from 'src/app/models/meta';\r\n\r\n@Component({\r\n  selector: 'app-financeiro',\r\n  templateUrl: './financeiro.page.html',\r\n  styleUrls: ['./financeiro.page.scss'],\r\n})\r\n/**\r\n * Pagina do Paciente que exibe suas conquistas financeiras\r\n */\r\nexport class FinanceiroPage implements OnInit {\r\n\r\n  paciente = new Paciente;\r\n  metas:Meta[] = [];\r\n\r\n  constructor(public toastController: ToastController, public alertController: AlertController, \r\n              private pacienteService:PacienteService, private financeiroService:FinanceiroService) { }\r\n\r\n  async ngOnInit() {\r\n    this.paciente = await this.pacienteService.getPacienteLogado();\r\n    this.atualizar();\r\n  }\r\n\r\n  /** Usa uma meta \r\n   * O dinheiro da meta ser√° discontato\r\n  */\r\n  usar(meta:Meta) {\r\n    //Lembrar de salvar quantas metas j√° foram concluidas para conquista\r\n    this.alertController.create({\r\n      header: 'Usar meta',\r\n      message: 'Dejesa realmente usar essa meta?',\r\n      buttons: [\r\n        'Cancelar',\r\n        {text: 'Usar',  handler: async () => {\r\n          meta.usado = true;\r\n          await this.financeiroService.atualizar(meta);\r\n          this.atualizar();\r\n          \r\n          //Baixa o valor disponivel \r\n          this.paciente.dinheiroDisponivel -= meta.objetivo;\r\n          this.pacienteService.atualizarPaciente(this.paciente)\r\n\r\n          this.toastController.create({\r\n            message: 'Meta usada!',\r\n            duration: 3000,\r\n            position: 'bottom'\r\n          }).then(t => t.present());\r\n        }\r\n      \r\n      }]\r\n    }).then(alert => alert.present());\r\n  }\r\n\r\n  /** Remover uma meta */\r\n  remover(meta:Meta) {\r\n\r\n    this.alertController.create({\r\n      header: 'Remover meta',\r\n      message: 'Dejesa realmente remover essa meta?',\r\n      buttons: [\r\n        'Cancelar',\r\n        {text: 'Remover',  handler: async () => {\r\n\r\n          await this.financeiroService.excluir(meta);\r\n          this.atualizar();\r\n\r\n          this.toastController.create({\r\n            message: 'Removida com sucesso',\r\n            duration: 3000,\r\n            position: 'bottom'\r\n          }).then(t => t.present());\r\n        }\r\n\r\n\r\n      }]\r\n    }).then(alert => alert.present());\r\n\r\n  \r\n  }\r\n\r\n  /**\r\n   * Adiciona uma nova meta\r\n   */\r\n  async adicionar() {\r\n\r\n    this.alertController.create({\r\n      header: 'Adicionar nova meta',\r\n      inputs: [\r\n        {name: 'titulo', placeholder: 'Digite um nome para a meta', type: 'text'},\r\n        {name: 'objetivo', placeholder: 'Digite o valor a juntar', type: 'number'},\r\n      ],\r\n      buttons: [\r\n        {text:'Cancelar', cssClass:'btn-cancelar'},\r\n        {text: 'Adicionar', cssClass:'btn-ok',   handler: async (dados) => {\r\n          const meta = new Meta(dados.titulo, Number(dados.objetivo));\r\n          console.log(meta);\r\n          await this.financeiroService.cadastrar(meta);\r\n          this.atualizar();\r\n\r\n          this.toastController.create({\r\n            message: 'Meta adicionada',\r\n            duration: 3000,\r\n            position: 'bottom'\r\n          }).then(t => t.present());\r\n        }\r\n      \r\n      }]\r\n    }).then(alert => alert.present());\r\n  }\r\n\r\n  /** Busca as metas do paciente */\r\n  async atualizar() {\r\n    this.metas = await this.financeiroService.buscarTodos();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport { Meta } from '../models/meta';\r\nimport { Events } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Service para controlar a quest√£o financeira do paciente\r\n */\r\nexport class FinanceiroService {\r\n\r\n  private financeiroDB:firebase.firestore.CollectionReference;\r\n  private usuario: firebase.User;\r\n\r\n  constructor(private events:Events) { \r\n    firebase.auth().onAuthStateChanged(user => this.usuario = user);\r\n    this.financeiroDB = firebase.firestore().collection('metas-financeiras');\r\n  }\r\n  /**\r\n   * Busca todas as metas de um paciente\r\n   */\r\n  async buscarTodos(): Promise<Meta[]> {\r\n    let snapshots = await this.financeiroDB.where('pacienteUID', '==', this.usuario.uid).get();\r\n    const metas:Meta[] = []\r\n    snapshots.forEach(doc => {\r\n      metas.push(Object.assign(new Meta, doc.data()))\r\n    })\r\n    return metas;\r\n  } \r\n\r\n  /**\r\n   * Cadastra uma nova meta\r\n   * @param meta \r\n   */\r\n  cadastrar(meta:Meta): Promise<any> {\r\n    const doc = this.financeiroDB.doc();\r\n    meta.pacienteUID = this.usuario.uid;\r\n    meta.uid = doc.id;\r\n    return doc.set(Object.assign({}, meta));\r\n  }\r\n\r\n  /**\r\n   * Atualiza uma meta\r\n   * @param meta \r\n   */\r\n  atualizar(meta:Meta): Promise<any> {\r\n    return this.financeiroDB.doc(meta.uid).set(Object.assign({}, meta));\r\n  }\r\n\r\n  /**\r\n   * Remove uma meta\r\n   * @param meta \r\n   */\r\n  excluir(meta:Meta): Promise<any> {\r\n    return this.financeiroDB.doc(meta.uid).delete();\r\n  }\r\n}\r\n"],"sourceRoot":""}