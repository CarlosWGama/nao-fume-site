{"version":3,"sources":["./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.page.html","./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.module.ts","./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.page.scss","./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.page.ts","./src/app/models/paciente.ts","./src/app/models/questionario.ts","./src/app/services/paciente.service.ts","./src/app/services/services.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,miF;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACmB;AACX;AAEV;AAEe;AACM;AAElE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAaF,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;CAAG;AAA3B,wBAAwB;IAXpC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,+EAAc;YACd,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;KACnC,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;AC5BrC,+DAA+D,2L;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACQ;AACR;AACnB;AACQ;AACW;AACjB;AACoB;AACtC;AAOjC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAK7B,YAAmB,WAAwB,EAAS,eAAgC,EAChE,eAA+B,EAAU,eAA+B,EACxE,MAAa,EAAS,eAA8B,EACpD,QAAyB,EAAU,WAA6B,EAChE,MAAc;QAJf,gBAAW,GAAX,WAAW,CAAa;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAChE,oBAAe,GAAf,eAAe,CAAgB;QAAU,oBAAe,GAAf,eAAe,CAAgB;QACxE,WAAM,GAAN,MAAM,CAAO;QAAS,oBAAe,GAAf,eAAe,CAAe;QACpD,aAAQ,GAAR,QAAQ,CAAiB;QAAU,gBAAW,GAAX,WAAW,CAAkB;QAChE,WAAM,GAAN,MAAM,CAAQ;QANlC,aAAQ,GAAG,IAAI,gEAAQ,EAAE,CAAC;IAMY,CAAC;IAEjC,QAAQ;;YACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,gEAAQ,EAAE,CAAC,CAAC;YAC9D,IAAI,IAAI,CAAC,QAAQ,CAAC,mBAAmB,IAAI,IAAI;gBAAE,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,oCAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YAGjH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;gBAC/C,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChH,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtF,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBACtF,mBAAmB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;aAChF,CAAC;QACJ,CAAC;KAAA;IAED;;OAEG;IACG,MAAM;;YACV,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC5B,KAAK,CAAC,mBAAmB,GAAI,oCAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACpF,IAAI,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBACvC,OAAO,EAAC,SAAS;gBACjB,OAAO,EAAE,SAAS;aACnB,CAAC,CAAC;YACH,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,UAAU;gBAClC,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,EAAE,8DAAK,CAAC,QAAQ,CAAC;gBAC1E,IAAI,QAAQ,CAAC,OAAO,EAAE;oBACpB,IAAI,CAAC,GAAG,CAAC,mCAAmC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,wBAAwB,CAAC;oBACnD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;iBAClD;;oBACC,IAAI,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAC;aACxF;iBAAM,EAAE,UAAU;gBACjB,IAAI,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,8DAAK,CAAC,QAAQ,CAAC;gBAC7F,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,QAAQ,CAAC,OAAO,EAAE;oBACpB,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;iBAClD;;oBACC,IAAI,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAC;aACxF;YACD,IAAI,CAAC,OAAO,EAAE,CAAC;QACjB,CAAC;KAAA;IACD;;;OAGG;IACK,GAAG,CAAC,GAAU;QAEpB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;YAC1B,OAAO,EAAE,GAAG;YACZ,QAAQ,EAAE,IAAI;SACf,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;IAC5B,CAAC;CAEF;;YA9DiC,0DAAW;YAA0B,8DAAe;YAChD,iFAAe;YAA0B,iFAAe;YACjE,sDAAM;YAAyB,8DAAc;YAC3C,oFAAgB;YAAsB,gEAAiB;YACxD,qDAAM;;AATvB,kBAAkB;IAL9B,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,2LAA0C;;KAE3C,CAAC;2EAMgC,0DAAW,EAA0B,8DAAe;QAChD,iFAAe,EAA0B,iFAAe;QACjE,sDAAM,EAAyB,8DAAc;QAC3C,oFAAgB,EAAsB,gEAAiB;QACxD,qDAAM;GATvB,kBAAkB,CAmE9B;AAnE8B;;;;;;;;;;;;;ACd/B;AAAA;AAAA;;GAEG;AACI,MAAM,QAAQ;IAKjB,YAAmB,GAAY,EAAS,IAAa,EAAS,MAAe,EAC1D,gBAAwB,CAAC,EAAS,eAAuB,GAAG,EAC5D,cAAuB,EAAS,mBAA4B,EAC5D,SAAiB,CAAC,EAClB,mBAA2B,CAAC,EAAS,uBAA+B,CAAC,EACrE,eAAuB,CAAC,EAAS,kBAA0B,CAAC,EAC5D,oBAA4B,CAAC,EAAS,qBAA6B,CAAC,EACpE,iBAA0B,IAAI,EAC9B,uBAA+B,CAAC,EAAS,WAAoB,KAAK,EAClE,uBAAuC,EAAE;QATzC,QAAG,GAAH,GAAG,CAAS;QAAS,SAAI,GAAJ,IAAI,CAAS;QAAS,WAAM,GAAN,MAAM,CAAS;QAC1D,kBAAa,GAAb,aAAa,CAAY;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAC5D,mBAAc,GAAd,cAAc,CAAS;QAAS,wBAAmB,GAAnB,mBAAmB,CAAS;QAC5D,WAAM,GAAN,MAAM,CAAY;QAClB,qBAAgB,GAAhB,gBAAgB,CAAY;QAAS,yBAAoB,GAApB,oBAAoB,CAAY;QACrE,iBAAY,GAAZ,YAAY,CAAY;QAAS,oBAAe,GAAf,eAAe,CAAY;QAC5D,sBAAiB,GAAjB,iBAAiB,CAAY;QAAS,uBAAkB,GAAlB,kBAAkB,CAAY;QACpE,mBAAc,GAAd,cAAc,CAAgB;QAC9B,yBAAoB,GAApB,oBAAoB,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAiB;QAClE,yBAAoB,GAApB,oBAAoB,CAAqB;QAZ5D,oDAAoD;QAC7C,SAAI,GAAG,CAAC,CAAC;IAWgD,CAAC;IAEjE,IAAW,SAAS;QAChB,OAAO,wBAAwB,IAAI,CAAC,MAAM,MAAM,CAAC;IACrD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBL;AAAA;AAAA;;GAEG;AACI,MAAM,YAAY;IAErB;;;;;;;OAOG;IACH,YAAmB,GAAY,EACZ,KAAa,EACb,KAAe,EACf,WAAmB,CAAC,EACpB,SAAmB,EACnB,YAAoB;QALpB,QAAG,GAAH,GAAG,CAAS;QACZ,UAAK,GAAL,KAAK,CAAQ;QACb,UAAK,GAAL,KAAK,CAAU;QACf,aAAQ,GAAR,QAAQ,CAAY;QACpB,cAAS,GAAT,SAAS,CAAU;QACnB,iBAAY,GAAZ,YAAY,CAAQ;IAAI,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBL;AAEN;AACS;AACQ;AAQtD,IAAa,eAAe;AAH5B;;GAEG;AACH,MAAa,eAAe;IAOxB;QAHQ,aAAQ,GAAY,IAAI,CAAC;QAI7B,6CAAa,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE;YACtC,IAAI,IAAI,IAAI,IAAI;gBACZ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;QAClC,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,kDAAkB,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACnE,CAAC;IAGD,2FAA2F;IAC3F;;OAEG;IACU,WAAW;;YACpB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAM,SAAS,EAAC,EAAE,CAAC;gBAC9I,IAAI,SAAS,GAAc,EAAE,CAAC;gBAC9B,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAM,GAAG,EAAC,EAAE,CAAC;oBAC5C,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,yDAAQ,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;oBAEvD,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;wBAC7F,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;4BACnB,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,iEAAY,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;wBACpF,CAAC,CAAC;oBACN,CAAC,CAAC;oBACF,OAAO,QAAQ,CAAC;gBACpB,CAAC,EAAC,CAAC;gBACH,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAE,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,yDAAQ,EAAE,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC;gBAClH,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACvB,OAAO,SAAS,CAAC;YACrB,CAAC,EAAC,CAAC;QACP,CAAC;KAAA;IAED;;;OAGG;IACU,MAAM,CAAC,GAAU;;YAC1B,OAAO,IAAI,CAAC,UAAU;iBACjB,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;iBAC7C,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC;iBAC9B,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC;iBACvB,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBACnB,IAAI,QAAQ,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC;gBAChC,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAc,CAAC;YAC/C,CAAC,CAAC;QACV,CAAC;KAAA;IACD,wFAAwF;IACxF;;OAEG;IACU,iBAAiB;;YAC1B,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS;gBAC5D,OAAO,IAAI,CAAC,QAAQ,CAAC;YAEzB,IAAI,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC;YAC1D,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YAEvB,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC;iBACpC,KAAK,CAAC,gBAAgB,EAAE,IAAI,EAAE,KAAK,CAAC,cAAc,CAAC;iBACnD,OAAO,CAAC,sBAAsB,EAAE,MAAM,CAAC;iBACvC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAClB,IAAI,IAAI,GAAG,CAAC,CAAC;gBACb,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACnB,IAAI,EAAE,CAAC;oBACP,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;oBACnB,IAAI,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS;wBAAE,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;gBACtD,CAAC,CAAC;YACP,CAAC,CAAC;YAEjB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,yDAAQ,EAAE,KAAK,CAAC,CAAC;YAEnD,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAClG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBACnB,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,iEAAY,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACzF,CAAC,CAAC;YACN,CAAC,CAAC;YAEF,OAAO,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;KAAA;IAED;;;OAGG;IACI,iBAAiB,CAAC,QAAiB;QACtC,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QACxC,OAAO,KAAK,CAAC,oBAAoB,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAEhD,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG;YACjC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,CAAC;CAEJ;AArGY,eAAe;IAN3B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IACF;;OAEG;;;GACU,eAAe,CAqG3B;AArG2B;;;;;;;;;;;;;;;;;;;ACZa;AACM;AAU/C,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAI;AAAlB,cAAc;IAN1B,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAE;QAChB,OAAO,EAAE;YACP,4DAAY;SACb;KACF,CAAC;GACW,cAAc,CAAI;AAAJ","file":"coordenador-pacientes-paciente-edicao-paciente-edicao-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/coordenador/pacientes\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Novo Paciente</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label>Nome</ion-label>\\r\\n        <ion-input formControlName=\\\"nome\\\" ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('nome').invalid && form.get('nome').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Obrigat√≥rio\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Senha</ion-label>\\r\\n        <ion-input type=\\\"password\\\" formControlName=\\\"senha\\\" slot=\\\"end\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('senha').invalid && form.get('senha').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          N√∫mero obrigator√≠o de pelo menos 4 digitos\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Pr√≥ximo question√°rio di√°rio</ion-label>\\r\\n        <ion-datetime display-format=\\\"DD/MM/YYYY\\\"  formControlName=\\\"ultimoDiaRespondido\\\" max=\\\"2030-12-30\\\" doneText=\\\"Ok\\\" cancelText=\\\"Cancelar\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Cigarros por dia</ion-label>\\r\\n        <ion-input type=\\\"number\\\" formControlName=\\\"mediaCigarros\\\" slot=\\\"end\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('mediaCigarros').invalid && form.get('mediaCigarros').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Obrigat√≥rio\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Pre√ßo do cigarro (R$)</ion-label>\\r\\n        <ion-input type=\\\"number\\\" formControlName=\\\"precoCigarro\\\" slot=\\\"end\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('precoCigarro').invalid && form.get('precoCigarro').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Obrigat√≥rio, no formato do exemplo \\\"1,50\\\"\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button (click)=\\\"salvar()\\\" expand=\\\"block\\\" color=\\\"success\\\" size=\\\"large\\\" [disabled]=\\\"!form.valid\\\">\\r\\n      Salvar\\r\\n    </ion-button>\\r\\n  </form>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PacienteEdicaoPage } from './paciente-edicao.page';\r\nimport { ServicesModule } from 'src/app/services/services.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PacienteEdicaoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ServicesModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PacienteEdicaoPage]\r\n})\r\nexport class PacienteEdicaoPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvb3JkZW5hZG9yL3BhY2llbnRlcy9wYWNpZW50ZS1lZGljYW8vcGFjaWVudGUtZWRpY2FvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, LoadingController, Events } from '@ionic/angular';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\nimport { Nivel } from 'src/app/enums/nivel.enum';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PacienteService } from 'src/app/services/paciente.service';\r\nimport { Paciente } from 'src/app/models/paciente';\r\nimport { NavExtrasService } from 'src/app/services/nav-extras.service';\r\nimport * as moment from 'moment'; \r\n\r\n@Component({\r\n  selector: 'app-paciente-edicao',\r\n  templateUrl: './paciente-edicao.page.html',\r\n  styleUrls: ['./paciente-edicao.page.scss'],\r\n})\r\nexport class PacienteEdicaoPage implements OnInit {\r\n\r\n  form:FormGroup;\r\n  paciente = new Paciente();\r\n  \r\n  constructor(public formBuilder: FormBuilder, public toastController: ToastController,\r\n              private usuariosService:UsuariosService, private pacienteService:PacienteService,\r\n               public router:Router, public activatedRouter:ActivatedRoute,\r\n               public navExtra:NavExtrasService, private loadingCtrl:LoadingController,\r\n               public events: Events) { }\r\n\r\n  async ngOnInit() {\r\n    this.paciente = this.navExtra.get('paciente', new Paciente());\r\n    if (this.paciente.ultimoDiaRespondido == null) this.paciente.ultimoDiaRespondido = moment().format('YYYY-MM-DD');\r\n\r\n\r\n    this.form = this.formBuilder.group({\r\n      nome: [this.paciente.nome, Validators.required],\r\n      senha: [null, (!this.paciente.uid ? [Validators.required, Validators.minLength(4)] : [Validators.minLength(4)])],\r\n      mediaCigarros: [this.paciente.mediaCigarros, [Validators.required, Validators.min(1)]],\r\n      precoCigarro: [this.paciente.precoCigarro, [Validators.required, Validators.min(0.1)]],\r\n      ultimoDiaRespondido: [this.paciente.ultimoDiaRespondido, [Validators.required]],\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Classe que salva (cadastra ou edita) paciente\r\n   */\r\n  async salvar() {\r\n    let dados = this.form.value;\r\n    dados.ultimoDiaRespondido =  moment(dados.ultimoDiaRespondido).format('YYYY-MM-DD');\r\n    let load = await this.loadingCtrl.create({\r\n      spinner:'circles',\r\n      message: 'Aguarde'\r\n    });\r\n    load.present();\r\n    if (!this.paciente.uid) { //Cadastra\r\n      let resposta = await this.usuariosService.cadastrar(dados, Nivel.Paciente)\r\n      if (resposta.success) {\r\n        this.msg(`Cadastrado com sucesso. C√≥digo: ${resposta.codigo}`);\r\n        this.router.navigateByUrl('/coordenador/pacientes')\r\n        this.events.publish('pacientes:atualizar', true);\r\n      } else \r\n        this.msg('N√£o foi poss√≠vel salvar os dados do paciente, tente novamente mais tarde');\r\n    } else { //Atualiza\r\n      let resposta = await this.usuariosService.atualizar(this.paciente.uid, dados, Nivel.Paciente)\r\n      console.log(resposta);\r\n      if (resposta.success) {\r\n        this.msg(`Atualizado com sucesso.`);\r\n        this.events.publish('pacientes:atualizar', true);\r\n      } else \r\n        this.msg('N√£o foi poss√≠vel salvar os dados do paciente, tente novamente mais tarde');\r\n    }\r\n    load.dismiss();\r\n  }\r\n  /**\r\n   * Envia uma mensagem\r\n   * @param msg \r\n   */\r\n  private msg(msg:string) {\r\n    \r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 5000\r\n    }).then(t => t.present());\r\n  }\r\n\r\n}\r\n","import { Questionario } from './questionario';\r\n\r\n/**\r\n * Classe com acesso ao dados do paciente\r\n */\r\nexport class Paciente {\r\n\r\n    // Lista a posi√ß√£o do paciente em rela√ß√£o aos demais\r\n    public rank = 0;\r\n\r\n    constructor(public uid?: string, public nome?: string, public codigo?: number,\r\n                public mediaCigarros: number = 0, public precoCigarro: number = 0.1,\r\n                public coordenadorUID?: string, public ultimoDiaRespondido?: string,\r\n                public avatar: number = 1,\r\n                public cigarrosEvitados: number = 0, public diasSeguidosSemFumar: number = 0,\r\n                public diasSemFumar: number = 0, public maxDiasSemFumar: number = 0,\r\n                public dinheiroAcumulado: number = 0, public dinheiroDisponivel: number = 0,\r\n                public primeiroAcesso: boolean = true,\r\n                public diasPraticoExercicio: number = 0, public excluido: boolean = false,\r\n                public questionariosDiarios: Questionario[] = []) { }\r\n\r\n    public get avatarURL(): string {\r\n        return `/nao-fume-site/assets/imgs/avatars/${this.avatar}.jpg`;\r\n    }\r\n}\r\n","/**\r\n * Question√°rio com os atributos das perguntas diarias\r\n */\r\nexport class Questionario {\r\n\r\n    /**\r\n     * @param dia | Dia da consulta (YYYY-MM-DD)\r\n     * @param humor | Como foi o humor do paciente 0 -> Baixo, 1 -> M√©dio, 2 -> Bom\r\n     * @param fumou | Se fumou naquele dia,\r\n     * @param cigarros | Quantidade de cigarros\r\n     * @param exercitou  | Se praticou exercicio\r\n     * @param vontadeFumar | Vontade de fumar 0 -> Baixa, 1 -> Normal, 2 -> Alta\r\n     */\r\n    constructor(public dia?: string,\r\n                public humor?: 0|1|2,\r\n                public fumou?: boolean,\r\n                public cigarros: number = 0,\r\n                public exercitou?: boolean,\r\n                public vontadeFumar?: 0|1|2) { }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment'\r\nimport * as firebase from 'firebase';\r\nimport { Paciente } from '../models/paciente';\r\nimport { Questionario } from '../models/questionario';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Controla os dados dos question√°rios do paciente\r\n */\r\nexport class PacienteService {\r\n\r\n    private pacienteDB: firebase.firestore.CollectionReference;\r\n    private usuarioID:string;\r\n    private paciente:Paciente = null;\r\n\r\n\r\n    constructor() { \r\n        firebase.auth().onAuthStateChanged(user => { \r\n            if (user != null)\r\n                this.usuarioID = user.uid;\r\n        })\r\n        this.pacienteDB = firebase.firestore().collection('pacientes');\r\n    }\r\n\r\n    \r\n    //============================= BUSCAR COMO COORDENADOR =================================//\r\n    /**\r\n     * Busca todos os pacientes de um Coordenador\r\n     */\r\n    public async buscarTodos(): Promise<Paciente[]> {\r\n        console.log(this.usuarioID);\r\n        return this.pacienteDB.where('coordenadorUID', '==' ,this.usuarioID).where('excluido', '==', false).orderBy('nome').get().then(async snapshots => {\r\n            let pacientes:Paciente[] = [];\r\n            const retorno = snapshots.docs.map(async doc => {\r\n                let paciente = Object.assign(new Paciente, doc.data());\r\n                \r\n                await this.pacienteDB.doc(paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n                    snapshot.forEach(doc => {\r\n                        paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n                    })\r\n                })\r\n                return paciente;\r\n            });\r\n            await Promise.all(retorno).then(dados => { dados.forEach(p => {pacientes.push(Object.assign(new Paciente, p))}) })\r\n            console.log(pacientes);\r\n            return pacientes;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Busca o Paciente pelo seu ID unico \r\n     * @param uid \r\n     */\r\n    public async buscar(uid:string): Promise<Paciente> {\r\n        return this.pacienteDB\r\n            .where('coordenadorUID', '==' ,this.usuarioID)\r\n            .where('excluido', '==', false)\r\n            .where('uid', '==', uid)\r\n            .get().then(snapshot => {\r\n                if (snapshot.empty) return null;\r\n                return snapshot.docs[0].data() as Paciente;\r\n            })\r\n    }\r\n    //============================= BUSCAR COMO PACIENTE =================================//\r\n    /**\r\n     * Recupera os dados do Paciente logado\r\n     */\r\n    public async getPacienteLogado():Promise<Paciente> {\r\n        if (this.paciente != null && this.paciente.uid == this.usuarioID) \r\n            return this.paciente;\r\n\r\n        let doc = await this.pacienteDB.doc(this.usuarioID).get();\r\n        let dados = doc.data();\r\n       \r\n        await this.pacienteDB.where('excluido', '==', false)\r\n                       .where('coordenadorUID', '==', dados.coordenadorUID)\r\n                       .orderBy('diasSeguidosSemFumar', 'desc')\r\n                       .get().then(snapshat => {\r\n                            let rank = 0;\r\n                            snapshat.forEach(doc => {\r\n                                rank++;\r\n                                let p = doc.data();\r\n                                if (p.uid == this.usuarioID) dados['rank'] = rank;\r\n                            })\r\n                       })\r\n\r\n        this.paciente = Object.assign(new Paciente, dados);\r\n\r\n        await this.pacienteDB.doc(this.paciente.uid).collection('questionariosDiarios').get().then(snapshot => {\r\n            snapshot.forEach(doc => {\r\n                this.paciente.questionariosDiarios.push(Object.assign(new Questionario, doc.data()));\r\n            })\r\n        })\r\n\r\n        return this.paciente;\r\n    }\r\n\r\n    /**\r\n     * Atualiza os dados do paciente\r\n     * @param paciente \r\n     */\r\n    public atualizarPaciente(paciente:Paciente) {\r\n        let dados = Object.assign({}, paciente);\r\n        delete dados.questionariosDiarios;\r\n        this.pacienteDB.doc(paciente.uid).update(dados);\r\n\r\n        if (this.paciente.uid == paciente.uid)\r\n            this.paciente = paciente;\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ServicesModule { }\r\n"],"sourceRoot":""}