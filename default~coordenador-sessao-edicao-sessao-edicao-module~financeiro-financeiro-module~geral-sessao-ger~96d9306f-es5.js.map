{"version":3,"sources":["./src/app/models/sessao.ts","./src/app/services/sessao.service.ts"],"names":[],"mappings":"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","file":"default~coordenador-sessao-edicao-sessao-edicao-module~financeiro-financeiro-module~geral-sessao-ger~96d9306f-es5.js","sourcesContent":["/**\r\n * Armazena os dados da sessão\r\n */\r\nexport class Sessao {\r\n    /**\r\n     * \r\n     * @param id \r\n     * @param data \r\n     * @param disponivel | Se a sessão já está disponivel para o pessoal resposnder \r\n     * @param dadosPacientes \r\n     */\r\n    constructor(public id?:string, public data?:string, public coordenadorUID?:string, public disponivel:boolean = false, public dadosPacientes: DadosPacientesSessao[] = [], public excluido:boolean = false) {}\r\n\r\n    /**\r\n     * Checa se o paciente esteve presente\r\n     */\r\n    public presente(pacienteID:string):boolean {\r\n        let presente = false;\r\n        this.dadosPacientes.forEach(p => {\r\n            if (p.pacienteUID = pacienteID) {\r\n                presente = p.presente;\r\n                return;\r\n            }\r\n        })\r\n        return presente;\r\n    }\r\n\r\n    get totalPacientes():number {\r\n        return this.dadosPacientes.length;\r\n    }\r\n\r\n    get totalPresentes():number {\r\n        return this.dadosPacientes.reduce((acumulador, p) => {\r\n            if (p.presente) acumulador++;\r\n            return acumulador;\r\n        }, 0);\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nexport class DadosPacientesSessao {\r\n\r\n    constructor(public pacienteUID?:string, public presente:boolean = false, public nome:string = null,\r\n        public situacao:SituacaoSessao = null, public opiniao:string = null) {}\r\n}\r\n\r\n/**\r\n * ENUM da Situação do Paciente\r\n */\r\nexport enum SituacaoSessao {\r\n    ABSTINENTE = 1,\r\n    FUMANDO = 2,\r\n    MANUTENCAO = 3\r\n}","import { Injectable } from '@angular/core';\r\nimport { Sessao, DadosPacientesSessao, SituacaoSessao } from '../models/sessao';\r\nimport * as firebase from 'firebase';\r\nimport { SessaoPage } from '../coordenador/sessao/sessao.page';\r\nimport { Paciente } from '../models/paciente';\r\nimport { Events } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessaoService {\r\n\r\n  private sessaoDB:firebase.firestore.CollectionReference;\r\n  private pacienteDB:firebase.firestore.Query;\r\n  private usuario:firebase.User;\r\n\r\n  constructor(private events:Events) { \r\n    this.sessaoDB = firebase.firestore().collection('sessoes');\r\n    \r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.usuario = user;\r\n      if (this.usuario != null)\r\n        this.pacienteDB = firebase.firestore().collection('pacientes').where('coordenadorUID', '==', this.usuario.uid).where('excluido', '==', false);\r\n    })\r\n  }\r\n  // ======================================== COORDENADOR =======================================/\r\n  /**\r\n   * Busca todas as sessões do coordenador\r\n   * Checa se o usuário qeu está solicitando é coordenador\r\n   */\r\n  public async buscarTodos(coordenadorUID:string = null):Promise<Sessao[]> {\r\n    if (!coordenadorUID) coordenadorUID = this.usuario.uid;\r\n    return this.sessaoDB\r\n      .where('excluido', '==', false)\r\n      .where('coordenadorUID', '==', coordenadorUID)\r\n      .orderBy('data', 'asc')\r\n      .get().then(async sessoesSnapshot => {\r\n        let sessoes:Sessao[] = [];\r\n\r\n        //busca sessões  \r\n        const resultSessoes = sessoesSnapshot.docs.map(async sessaoDOC => {\r\n          let dadosSessao = Object.assign(new Sessao, sessaoDOC.data());\r\n          \r\n          //Busca Pacientes das sessões\r\n          await this.sessaoDB.doc(dadosSessao.id).collection('pacientes').get().then(async pacientesSnapshot => {\r\n            dadosSessao.dadosPacientes = await Promise.all(pacientesSnapshot.docs.map(async pacienteDOC => {\r\n              let dadosPaciente = Object.assign(new DadosPacientesSessao, pacienteDOC.data());\r\n              dadosPaciente.nome = (await firebase.firestore().collection('pacientes').doc(dadosPaciente.pacienteUID).get()).data()['nome'];\r\n              return dadosPaciente;\r\n            }))\r\n          });\r\n          return dadosSessao;\r\n        })\r\n        sessoes = await Promise.all(resultSessoes);\r\n        return sessoes;\r\n\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Cadastra uma nova seção\r\n   */\r\n  public async cadastrar(sessao:Sessao):Promise<boolean> {\r\n    let doc = this.sessaoDB.doc();\r\n    //Cadastra a Sessão\r\n    sessao.coordenadorUID = this.usuario.uid;\r\n    delete sessao.dadosPacientes;\r\n    sessao.id = doc.id;\r\n    await doc.set(Object.assign({}, sessao));\r\n    //Cadastra os Pacientes na sessão\r\n    let snapshot = await this.pacienteDB.get();\r\n    snapshot.forEach(pacienteDOC => {\r\n      let dados = pacienteDOC.data();\r\n      let pacienteDados = new DadosPacientesSessao(pacienteDOC.id, false, dados.nome);\r\n      this.sessaoDB.doc(sessao.id).collection('pacientes').doc(pacienteDOC.id).set(Object.assign({}, pacienteDados))\r\n    })\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Atualiza uma sessão existente\r\n   */\r\n  public async atualizar(sessao:Sessao):Promise<boolean> {\r\n    //Atualiza a sessão\r\n    await this.sessaoDB.doc(sessao.id).update({\r\n      data:sessao.data,\r\n      disponivel: sessao.disponivel\r\n    })\r\n\r\n    //Atualiza os pacientes\r\n    sessao.dadosPacientes.forEach(async dado => {\r\n      console.log(dado);\r\n      await this.sessaoDB.doc(sessao.id).collection('pacientes').doc(dado.pacienteUID).update({\r\n        presente:dado.presente,\r\n        situacao:(dado.situacao != undefined ? dado.situacao : null),\r\n        opiniao:dado.opiniao\r\n      })\r\n    })\r\n    return true;\r\n  }\r\n\r\n   /**\r\n   * Remove a sessão do sistema\r\n   */\r\n  public async remover(sessaoID:string):Promise<boolean> {\r\n    //Atualiza a sessão\r\n    await this.sessaoDB.doc(sessaoID).update({\r\n      excluido: true\r\n    })\r\n    return true;\r\n  }\r\n\r\n  // =========================== PACIENTE ============================================//\r\n  public buscarSessoes(paciente:Paciente):Promise<Sessao[]> {\r\n     \r\n    return this.sessaoDB\r\n      .where('excluido', '==', false)\r\n      .where('coordenadorUID', '==', paciente.coordenadorUID)\r\n      .orderBy('data', 'asc')\r\n      .get().then(sessoesSnapshot => {\r\n\r\n        let sessoes:Sessao[] = [];\r\n        \r\n        sessoesSnapshot.forEach(async doc => {\r\n          let dadosSessao = Object.assign(new Sessao, doc.data());\r\n          await this.sessaoDB.doc(dadosSessao.id).collection('pacientes').doc(paciente.uid).get().then(sessaodoc => {\r\n            let dadosPaciente = Object.assign(new DadosPacientesSessao, sessaodoc.data());\r\n            dadosSessao.dadosPacientes.push(dadosPaciente);\r\n          })\r\n          await new Promise(resolve => setTimeout(resolve, 1000));\r\n          sessoes.push(dadosSessao);\r\n        })\r\n\r\n        return sessoes;\r\n      })\r\n  }\r\n\r\n  /**\r\n   * Paciente responde sobre a sessão\r\n   * @param sessaoID \r\n   * @param comentario \r\n   */\r\n  public responder(sessaoID:string, comentario:string) {\r\n    this.sessaoDB.doc(sessaoID).collection('pacientes').doc(this.usuario.uid).update({\r\n      opiniao:comentario\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Retorna as sessões que o paciente deve responder\r\n   */\r\n  public async buscarSessoesResponder(paciente:Paciente): Promise<Sessao[]>{\r\n    \r\n    const sessoes = [];\r\n\r\n    //Busca todas as sessões\r\n    const snapshots = await this.sessaoDB.where('coordenadorUID', '==', paciente.coordenadorUID)\r\n                              .where('excluido', '==', false)\r\n                              .where('disponivel', '==', true).get();\r\n    //Busca as sessões \r\n    let buscaSessoes = snapshots.docs.map(async snapshot => {\r\n      let sessao = Object.assign(new Sessao(), snapshot.data());\r\n\r\n      //Avalia se o usuário respondeu a sessão\r\n      let doc = await this.sessaoDB.doc(sessao.id).collection('pacientes').doc(paciente.uid).get();\r\n      let dados = doc.data();\r\n    \r\n      if (dados == null) return null;\r\n\r\n      //Envia apenas as sessões que o usuário ainda não deu sua opinião\r\n      if (dados.opiniao == null) {\r\n        //Recupera os  dados do paciente na lista da sessão\r\n        const pacienteDOC = await this.sessaoDB.doc(sessao.id).collection('pacientes').doc(paciente.uid).get()\r\n        let dadosPaciente = Object.assign(new DadosPacientesSessao, pacienteDOC.data());\r\n        dadosPaciente.nome = (await firebase.firestore().collection('pacientes').doc(dadosPaciente.pacienteUID).get()).data()['nome'];\r\n        sessao.dadosPacientes.push(dadosPaciente);\r\n      }\r\n\r\n      return (dados.opiniao == null ? sessao : null);\r\n    });\r\n\r\n    const retorno = await Promise.all(buscaSessoes);\r\n    //Salva na constante apenas as sessões encontradas\r\n    retorno.forEach(s => { if (s != null) sessoes.push(s); })\r\n    \r\n    return sessoes;\r\n  }\r\n}\r\n"],"sourceRoot":""}