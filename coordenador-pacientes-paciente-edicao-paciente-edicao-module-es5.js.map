{"version":3,"sources":["./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.page.html","./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.module.ts","./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.page.scss","./src/app/coordenador/pacientes/paciente-edicao/paciente-edicao.page.ts","./src/app/services/services.module.ts"],"names":[],"mappings":"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","file":"coordenador-pacientes-paciente-edicao-paciente-edicao-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/coordenador/pacientes\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>Novo Paciente</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <form [formGroup]=\\\"form\\\">\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label>Nome</ion-label>\\r\\n        <ion-input formControlName=\\\"nome\\\" ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('nome').invalid && form.get('nome').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Obrigatório\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Senha</ion-label>\\r\\n        <ion-input type=\\\"password\\\" formControlName=\\\"senha\\\" slot=\\\"end\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('senha').invalid && form.get('senha').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Número obrigatorío de pelo menos 4 digitos\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Próximo questionário diário</ion-label>\\r\\n        <ion-datetime display-format=\\\"DD/MM/YYYY\\\"  formControlName=\\\"ultimoDiaRespondido\\\" max=\\\"2030-12-30\\\" doneText=\\\"Ok\\\" cancelText=\\\"Cancelar\\\"></ion-datetime>\\r\\n      </ion-item>\\r\\n\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Cigarros por dia</ion-label>\\r\\n        <ion-input type=\\\"number\\\" formControlName=\\\"mediaCigarros\\\" slot=\\\"end\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('mediaCigarros').invalid && form.get('mediaCigarros').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Obrigatório\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label>Preço do cigarro (R$)</ion-label>\\r\\n        <ion-input type=\\\"number\\\" formControlName=\\\"precoCigarro\\\" slot=\\\"end\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item *ngIf=\\\"form.get('precoCigarro').invalid && form.get('precoCigarro').touched\\\" lines=\\\"none\\\">\\r\\n        <ion-text color=\\\"danger\\\" class=\\\"form-error\\\">\\r\\n          Obrigatório, no formato do exemplo \\\"1,50\\\"\\r\\n        </ion-text>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-button (click)=\\\"salvar()\\\" expand=\\\"block\\\" color=\\\"success\\\" size=\\\"large\\\" [disabled]=\\\"!form.valid\\\">\\r\\n      Salvar\\r\\n    </ion-button>\\r\\n  </form>\\r\\n\\r\\n\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PacienteEdicaoPage } from './paciente-edicao.page';\r\nimport { ServicesModule } from 'src/app/services/services.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PacienteEdicaoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ServicesModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PacienteEdicaoPage]\r\n})\r\nexport class PacienteEdicaoPageModule {}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvb3JkZW5hZG9yL3BhY2llbnRlcy9wYWNpZW50ZS1lZGljYW8vcGFjaWVudGUtZWRpY2FvLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { ToastController, LoadingController, Events } from '@ionic/angular';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\nimport { Nivel } from 'src/app/enums/nivel.enum';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PacienteService } from 'src/app/services/paciente.service';\r\nimport { Paciente } from 'src/app/models/paciente';\r\nimport { NavExtrasService } from 'src/app/services/nav-extras.service';\r\nimport * as moment from 'moment'; \r\n\r\n@Component({\r\n  selector: 'app-paciente-edicao',\r\n  templateUrl: './paciente-edicao.page.html',\r\n  styleUrls: ['./paciente-edicao.page.scss'],\r\n})\r\nexport class PacienteEdicaoPage implements OnInit {\r\n\r\n  form:FormGroup;\r\n  paciente = new Paciente();\r\n  \r\n  constructor(public formBuilder: FormBuilder, public toastController: ToastController,\r\n              private usuariosService:UsuariosService, private pacienteService:PacienteService,\r\n               public router:Router, public activatedRouter:ActivatedRoute,\r\n               public navExtra:NavExtrasService, private loadingCtrl:LoadingController,\r\n               public events: Events) { }\r\n\r\n  async ngOnInit() {\r\n    this.paciente = this.navExtra.get('paciente', new Paciente());\r\n    if (this.paciente.ultimoDiaRespondido == null) this.paciente.ultimoDiaRespondido = moment().format('YYYY-MM-DD');\r\n\r\n\r\n    this.form = this.formBuilder.group({\r\n      nome: [this.paciente.nome, Validators.required],\r\n      senha: [null, (!this.paciente.uid ? [Validators.required, Validators.minLength(4)] : [Validators.minLength(4)])],\r\n      mediaCigarros: [this.paciente.mediaCigarros, [Validators.required, Validators.min(1)]],\r\n      precoCigarro: [this.paciente.precoCigarro, [Validators.required, Validators.min(0.1)]],\r\n      ultimoDiaRespondido: [this.paciente.ultimoDiaRespondido, [Validators.required]],\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Classe que salva (cadastra ou edita) paciente\r\n   */\r\n  async salvar() {\r\n    let dados = this.form.value;\r\n    dados.ultimoDiaRespondido =  moment(dados.ultimoDiaRespondido).format('YYYY-MM-DD');\r\n    let load = await this.loadingCtrl.create({\r\n      spinner:'circles',\r\n      message: 'Aguarde'\r\n    });\r\n    load.present();\r\n    if (!this.paciente.uid) { //Cadastra\r\n      let resposta = await this.usuariosService.cadastrar(dados, Nivel.Paciente)\r\n      if (resposta.success) {\r\n        this.msg(`Cadastrado com sucesso. Código: ${resposta.codigo}`);\r\n        this.router.navigateByUrl('/coordenador/pacientes')\r\n        this.events.publish('pacientes:atualizar', true);\r\n      } else \r\n        this.msg('Não foi possível salvar os dados do paciente, tente novamente mais tarde');\r\n    } else { //Atualiza\r\n      let resposta = await this.usuariosService.atualizar(this.paciente.uid, dados, Nivel.Paciente)\r\n      console.log(resposta);\r\n      if (resposta.success) {\r\n        this.msg(`Atualizado com sucesso.`);\r\n        this.events.publish('pacientes:atualizar', true);\r\n      } else \r\n        this.msg('Não foi possível salvar os dados do paciente, tente novamente mais tarde');\r\n    }\r\n    load.dismiss();\r\n  }\r\n  /**\r\n   * Envia uma mensagem\r\n   * @param msg \r\n   */\r\n  private msg(msg:string) {\r\n    \r\n    this.toastController.create({\r\n      message: msg,\r\n      duration: 5000\r\n    }).then(t => t.present());\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class ServicesModule { }\r\n"],"sourceRoot":""}